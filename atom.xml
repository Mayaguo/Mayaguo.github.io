<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GMaya</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gmaya.top/"/>
  <updated>2020-01-13T08:36:05.632Z</updated>
  <id>https://gmaya.top/</id>
  
  <author>
    <name>GMaya</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>建站心得</title>
    <link href="https://gmaya.top/2020/01/10/0110/"/>
    <id>https://gmaya.top/2020/01/10/0110/</id>
    <published>2020-01-10T13:20:33.000Z</published>
    <updated>2020-01-13T08:36:05.632Z</updated>
    
    <content type="html"><![CDATA[<p>从偶然发现个人博客开始，就开始着手搭建一个自己的博客网站，也许写不出什么有技术含量的东西，但是也图个新鲜，练练手，记录一下自己的成长经历！<br>但是就是这个随手开始弄得网站，前前后后花了将近一个月，SO,我要将自己的过程记录下来！</p><a id="more"></a><h3 id="1-买服务器"><a href="#1-买服务器" class="headerlink" title="1. 买服务器"></a>1. 买服务器</h3><p>&lt;此步骤可以省略&gt;<br>我是购买的腾讯云，首次大幅度优惠，99/年。当然，博客如果都是静态页面，也可以不需要服务器，直接部署到github，或者码云上，都是可以的（免费）。<br>如果你只需要搭建博客不需要其他的，可以不买服务器，忽略即可。我是因为还要用服务器干点其他的。</p><h3 id="2-买域名"><a href="#2-买域名" class="headerlink" title="2. 买域名"></a>2. 买域名</h3><p>&lt;此步骤可以省略&gt;<br>我是在腾讯云打折5块钱买了一年的域名，虽然不买也行，用github自动生成的也中，但我不想要！</p><h4 id="2-1-备案"><a href="#2-1-备案" class="headerlink" title="2.1 备案"></a>2.1 备案</h4><p>使用国内服务器，域名不管是哪里的，都需要备案！反正我资料啥的一顿填，大概半个月备案成功！我刚开始买了之后大概一星期左右网站使用域名已经进不去了，一直让我去备案。</p><h4 id="2-2-域名解析"><a href="#2-2-域名解析" class="headerlink" title="2.2 域名解析"></a>2.2 域名解析</h4><p>将域名解析到我的服务器</p><h4 id="2-3-nginx代理"><a href="#2-3-nginx代理" class="headerlink" title="2.3 nginx代理"></a>2.3 nginx代理</h4><p>我是使用的nginx代理的静态页面，然后将我生成好的博客页面直接放到服务器，配置好nginx的配置就ok，然后直接访问域名。当然也可以搞个tomcat放到里面。</p><h4 id="2-4-SSL证书"><a href="#2-4-SSL证书" class="headerlink" title="2.4 SSL证书"></a>2.4 SSL证书</h4><p>弄完之后我的访问域名是不安全的链接，所以我又免费申请了一个SSL证书，配置到nginx中，然后博客就可以https访问了。</p><h3 id="3-hexo建站"><a href="#3-hexo建站" class="headerlink" title="3. hexo建站"></a>3. hexo建站</h3><h4 id="3-1-配置环境"><a href="#3-1-配置环境" class="headerlink" title="3.1 配置环境"></a>3.1 配置环境</h4><p>首先根据hexo官方网站将本地环境搭建起来，对于经常使用git提交拉取公司项目的人，很快都搞定了。</p><h4 id="3-2-挑选模板"><a href="#3-2-挑选模板" class="headerlink" title="3.2 挑选模板"></a>3.2 挑选模板</h4><p>直接在hexo官方网站挑选自己中意的博客模板，我默默挑了好多，中间改过好几次，总之挑一个自己喜欢的。</p><h4 id="3-3-修改模板"><a href="#3-3-修改模板" class="headerlink" title="3.3 修改模板"></a>3.3 修改模板</h4><p>一般都是根据模板的博主介绍，一步一步一步一步一步一步修改成为自己的博客。总之我感觉这一步是最长的。</p><h3 id="4-写博客"><a href="#4-写博客" class="headerlink" title="4. 写博客"></a>4. 写博客</h3><p>不积跬步，无以至千里；不积小流，无以成江海。在接下来的岁月写你想写的东西吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从偶然发现个人博客开始，就开始着手搭建一个自己的博客网站，也许写不出什么有技术含量的东西，但是也图个新鲜，练练手，记录一下自己的成长经历！&lt;br&gt;但是就是这个随手开始弄得网站，前前后后花了将近一个月，SO,我要将自己的过程记录下来！&lt;/p&gt;
    
    </summary>
    
    
      <category term="自我抒写" scheme="https://gmaya.top/categories/%E8%87%AA%E6%88%91%E6%8A%92%E5%86%99/"/>
    
    
      <category term="随笔" scheme="https://gmaya.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>认识酷q</title>
    <link href="https://gmaya.top/2019/12/30/kuq-know/"/>
    <id>https://gmaya.top/2019/12/30/kuq-know/</id>
    <published>2019-12-30T13:41:04.000Z</published>
    <updated>2019-12-30T13:43:57.942Z</updated>
    
    <content type="html"><![CDATA[<p>酷Q Air 是一个轻巧、免费、高效的机器人核心，功能需要安装“应用”实现。登录酷Q，完成教程后，建议 访问 酷Q应用发布板块，下载安装您所需要的应用，创造让大家喜爱并且属于你自己的专属机器人。</p><a id="more"></a><p><strong>酷q是干嘛的</strong></p><blockquote><p>酷Q Air 是一个轻巧、免费、高效的机器人核心，功能需要安装“应用”实现。登录酷Q，完成教程后，建议 访问 酷Q应用发布板块，下载安装您所需要的应用，创造让大家喜爱并且属于你自己的专属机器人。</p></blockquote><p>官网：<a href="https://cqp.cc/" target="_blank" rel="noopener">酷q社区</a></p><p>通俗的讲就是，打造一个属于自己的qq机器人，有点类似于现在的q群管家，qq小冰。但是你可以把他的功能再次扩大！（活跃群气氛必不可少）。主要有：入群欢迎，问答，便民（查天气，查快递等），各种小游戏娱乐，关键词禁言等等，需要看代码功底，当然你也可以去社区下载别人分享的插件，直接使用。</p><p>我也是在偶然的机会认识到了酷q，然后就爱不释手，从0开始学习了易语言，然后写出了第一个酷q插件<a href="https://cqp.cc/t/46270" target="_blank" rel="noopener">猜拳签到游戏</a>，当然我并不满足，然后又写出了查电影，问答，查运势，查天气，查新闻，随机笑话等，当然这些我并没有发布出来， 因为这些第三方接口我是免费用的，每天有限制几百条， 所以不适合分享，只是在自己的群里面使用而已。</p><p>如果你和我一样刚刚认识酷q，那么你不妨看一下这个<a href="https://docs.cqp.im/" target="_blank" rel="noopener">快速入门</a><br>使用<a href="https://cqp.cc/t/15124" target="_blank" rel="noopener">sdk</a>进行酷q开发。由于教程很多，我就没得写了，如果有不懂的可以留言评论或者到关于我页面查看联系方式。</p><p>但是我是java开发者，使用易语言难免有所不习惯，所以参考了<a href="https://cqp.cc/t/37318" target="_blank" rel="noopener">南荒喵</a>大佬的教程，使用支持java的sdk进行开发。</p><p>到了最后我在此demo上又加上mybatis-plus，springboot，连接数据库，等一系列操作。</p><p>有的时候思路是个好东西，当我弄完之后，我不知道写什么东西了，整天都是配环境，搭建环境，但是到最后写插件内容的时候，迷茫了，写什么呢，写什么好呢，写什么会有人用呢，看社区里面，那都是人家写出来的，你再写一遍干嘛呢。</p><p>好多东西都是 从简单，到复杂，到迷茫，到不知所措。（服务器自己买了一个，酷q是用的免费的）</p><p>然后我就认识了jsoup，百度百科是这样说的</p><blockquote><p>jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</p></blockquote><p>然后我就又陷入了进去，忘记了游戏，忘记了时间。</p><p>希望前进的路上不再迷茫！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;酷Q Air 是一个轻巧、免费、高效的机器人核心，功能需要安装“应用”实现。登录酷Q，完成教程后，建议 访问 酷Q应用发布板块，下载安装您所需要的应用，创造让大家喜爱并且属于你自己的专属机器人。&lt;/p&gt;
    
    </summary>
    
    
      <category term="自我抒写" scheme="https://gmaya.top/categories/%E8%87%AA%E6%88%91%E6%8A%92%E5%86%99/"/>
    
    
      <category term="随笔" scheme="https://gmaya.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>idea在jdk1.8情况下使用反编译插件</title>
    <link href="https://gmaya.top/2019/12/30/idea-decompilation/"/>
    <id>https://gmaya.top/2019/12/30/idea-decompilation/</id>
    <published>2019-12-30T05:41:01.000Z</published>
    <updated>2020-01-10T07:31:40.007Z</updated>
    
    <content type="html"><![CDATA[<p>使用JD-GUI在jdk1.8情况下失效，我也查找了好多办法，最后看到idea有默认的，只是没有打开，瞬间搞定，记录一下！</p><a id="more"></a><p>没有反编译是显示compiled code</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">debug</span><span class="params">(java.lang.String... messages)</span> </span>&#123; <span class="comment">/* compiled code */</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">debug</span><span class="params">(java.lang.Object... messages)</span> </span>&#123; <span class="comment">/* compiled code */</span> &#125;</span><br></pre></td></tr></table></figure><p>idea不需要安装任何插件， 比如JD-GUI（这个在jdk1.8还是打不开）</p><p>因为，安装idea默认有，只是没有打开罢了</p><p>打开setting –&gt;plugings 搜索 Java Bytecode Decompiler</p><p><img src="https://img-blog.csdnimg.cn/20191230114857888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2dmbDE0MjcwOTcxMDM=,size_16,color_FFFFFF,t_70" alt="设置"><br>勾选，然后重启idea （注意：你的其他反编译插件就不要开了，关掉）</p><p>重启之后会让你选择 是否同意使用此插件， 点击最左面accept，同意即可！</p><p><img src="https://img-blog.csdnimg.cn/2019123011510349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2dmbDE0MjcwOTcxMDM=,size_16,color_FFFFFF,t_70" alt="结果"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用JD-GUI在jdk1.8情况下失效，我也查找了好多办法，最后看到idea有默认的，只是没有打开，瞬间搞定，记录一下！&lt;/p&gt;
    
    </summary>
    
    
      <category term="自我抒写" scheme="https://gmaya.top/categories/%E8%87%AA%E6%88%91%E6%8A%92%E5%86%99/"/>
    
    
      <category term="Java" scheme="https://gmaya.top/tags/Java/"/>
    
      <category term="idea插件" scheme="https://gmaya.top/tags/idea%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Java性能测试大比拼</title>
    <link href="https://gmaya.top/2019/12/28/property-compare/"/>
    <id>https://gmaya.top/2019/12/28/property-compare/</id>
    <published>2019-12-28T15:23:56.000Z</published>
    <updated>2019-12-30T06:10:56.770Z</updated>
    
    <content type="html"><![CDATA[<p>实体类转换哪个快？Map循环遍历哪个快？转换为字符串哪个快？测试，分析，看源码，看底层知识。</p><a id="more"></a><h2 id="dao和vo实体转换比拼"><a href="#dao和vo实体转换比拼" class="headerlink" title="dao和vo实体转换比拼"></a>dao和vo实体转换比拼</h2><p>参与比拼的两个选手:</p><ol><li>org.springframework.beans.BeanUtils</li><li>org.springframework.cglib.beans.BeanCopier</li></ol><p>测试方式:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> leng = <span class="number">10000000</span>;</span><br><span class="line">        Stu stu = <span class="keyword">new</span> Stu();</span><br><span class="line">        stu.setStuId(<span class="string">"id"</span>);</span><br><span class="line">        stu.setStuName(<span class="string">"name"</span>);</span><br><span class="line">        stu.setStuAge(<span class="number">12</span>);</span><br><span class="line">        stu.setStuClassId(<span class="string">"ClassId"</span>);</span><br><span class="line">        StuVO stuVO = <span class="keyword">new</span> StuVO();</span><br><span class="line">        <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; leng; i++) &#123;</span><br><span class="line">            BeanCopier beanCopier = BeanCopier.create(stu.getClass(), stuVO.getClass(), <span class="keyword">false</span>);</span><br><span class="line">            beanCopier.copy(stu,stuVO,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"beanCopier.copy:"</span>+(System.currentTimeMillis()-l));</span><br><span class="line">        l = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; leng; i++) &#123;</span><br><span class="line">            BeanUtils.copyProperties(stu,stuVO);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"BeanUtils.copyProperties:"</span>+(System.currentTimeMillis()-l));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>比拼结果:</p><p><img src="https://img-blog.csdnimg.cn/20190426160609633.png" alt="结果"></p><p><strong>备注:</strong> 如果把BeanCopier.create放到循环外,效率还可以加快!!!  可能由于各方面原因,次数较少时测试不准</p><h2 id="Map遍历几种方式比拼"><a href="#Map遍历几种方式比拼" class="headerlink" title="Map遍历几种方式比拼"></a>Map遍历几种方式比拼</h2><p>参与比拼的四个选手:</p><ol><li>keySet的for循环方式</li><li>keySet的iterator迭代器方式</li><li>entrySet的for循环方式</li><li>entrySet的iterator迭代器方式</li></ol><p>测试方式:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span>; i++) &#123;</span><br><span class="line">            map.put(i + <span class="string">""</span>, i + <span class="string">"AA"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        keySet(map);</span><br><span class="line">        keySetIterator(map);</span><br><span class="line">        entrySet(map);</span><br><span class="line">        entrySetIterator(map);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * keySet的for循环方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keySet</span><span class="params">(Map&lt;String, String&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">            String value = map.get(key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"keySet运行时间"</span> + (endTime - startTime));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * keySet的iterator迭代器方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keySetIterator</span><span class="params">(Map&lt;String, String&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        Iterator&lt;String&gt; iterator = map.keySet().iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            String key = iterator.next();</span><br><span class="line">            String value = map.get(key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"keySetIterator运行时间"</span> + (endTime - startTime));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * entrySet的for循环方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">entrySet</span><span class="params">(Map&lt;String, String&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</span><br><span class="line">            String key = entry.getKey();</span><br><span class="line">            String value = entry.getValue();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"entrySet运行时间"</span> + (endTime - startTime));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * entrySet的iterator迭代器方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">entrySetIterator</span><span class="params">(Map&lt;String, String&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = map.entrySet().iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            Map.Entry&lt;String, String&gt; entry = iterator.next();</span><br><span class="line">            String key = entry.getKey();</span><br><span class="line">            String value = entry.getValue();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"entrySetIterator运行时间"</span> + (endTime - startTime));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>比拼结果:</p><p><img src="https://img-blog.csdnimg.cn/20190426164641566.png" alt="结果2"></p><p>备注:可能由于各方面原因,次数较少时测试不准</p><h2 id="基本数据类型转为字符串方法比拼"><a href="#基本数据类型转为字符串方法比拼" class="headerlink" title="基本数据类型转为字符串方法比拼"></a>基本数据类型转为字符串方法比拼</h2><p>参与比拼的三个选手:</p><ol><li>基本数据类型.toString()</li><li>String.valueOf(数据)</li><li>数据+””</li></ol><p>测试方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> end = <span class="number">1000000000</span>;</span><br><span class="line">        Integer t = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; end; i++)&#123;</span><br><span class="line">            String str = t.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Integer.toString()："</span> + (System.currentTimeMillis() - startTime) + <span class="string">"ms"</span>);</span><br><span class="line">        startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; end; i++)&#123;</span><br><span class="line">            String str = String.valueOf(t);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"String.valueOf()："</span> + (System.currentTimeMillis() - startTime) + <span class="string">"ms"</span>);</span><br><span class="line">        startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; end; i++)&#123;</span><br><span class="line">            String str = t + <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"t + '' :"</span> + (System.currentTimeMillis() - startTime) + <span class="string">"ms"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>比拼结果:</p><p><img src="https://img-blog.csdnimg.cn/20190426171337502.png" alt="结果3"></p><p>备注:可能由于各方面原因,次数较少时测试不准</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.String.valueOf()方法底层调用了Integer.toString()方法，但是会在调用前做空判断</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.Integer.toString()方法，直接调用</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>.t + <span class="string">""</span>底层使用了StringBuilder实现，先用append方法拼接，再用toString()方法获取字符串</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实体类转换哪个快？Map循环遍历哪个快？转换为字符串哪个快？测试，分析，看源码，看底层知识。&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端开发" scheme="https://gmaya.top/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java" scheme="https://gmaya.top/tags/Java/"/>
    
      <category term="性能比较" scheme="https://gmaya.top/tags/%E6%80%A7%E8%83%BD%E6%AF%94%E8%BE%83/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis-plus之自动生成</title>
    <link href="https://gmaya.top/2019/12/27/Mybatis-plus/"/>
    <id>https://gmaya.top/2019/12/27/Mybatis-plus/</id>
    <published>2019-12-27T14:16:25.000Z</published>
    <updated>2020-01-13T08:46:49.001Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><a id="more"></a><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>本文章首次是在csdn上写的，本次发布到自己的博客中，增添一点色彩。</p><p>点击查看<a href="https://mybatis.plus/" target="_blank" rel="noopener">Mybatis-plus官方文档</a></p><h2 id="2-创建spring-boot-项目"><a href="#2-创建spring-boot-项目" class="headerlink" title="2. 创建spring boot 项目"></a>2. 创建spring boot 项目</h2><p>使用idea默认生成即可 …</p><h2 id="3-修改pom文件"><a href="#3-修改pom文件" class="headerlink" title="3. 修改pom文件"></a>3. 修改pom文件</h2><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">  </span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;<span class="keyword">optional</span>&gt;<span class="literal">true</span>&lt;/<span class="keyword">optional</span>&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.1</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--mybatis-plus自动生成代码--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.1</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- velocity 模版引擎 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.velocity&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;velocity-engine-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--lombok--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.16</span><span class="number">.16</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;</span><br><span class="line">    &lt;<span class="keyword">optional</span>&gt;<span class="literal">true</span>&lt;/<span class="keyword">optional</span>&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--swagger2--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.9</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.9</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="4-修改application-yml文件"><a href="#4-修改application-yml文件" class="headerlink" title="4. 修改application.yml文件"></a>4. 修改application.yml文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapperLocations:</span> <span class="string">classpath*:mapper/*.xml</span></span><br><span class="line">  <span class="attr">typeAliasesPackage:</span> <span class="string">com.mybatis.plus.demo.model</span> <span class="comment"># mybatis 别名包扫描路径</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span> <span class="comment">#逻辑已删除值(默认为 1)</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span> <span class="comment"># 逻辑未删除值(默认为 0)</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">    <span class="comment">#线上关闭sql日志打印</span></span><br></pre></td></tr></table></figure><h2 id="5-修改启动类"><a href="#5-修改启动类" class="headerlink" title="5. 修改启动类"></a>5. 修改启动类</h2><p><img src="https://img-blog.csdnimg.cn/20190612171238629.png" alt="启动类"></p><h2 id="6-创建Mybatis-plus配置"><a href="#6-创建Mybatis-plus配置" class="headerlink" title="6. 创建Mybatis-plus配置"></a>6. 创建Mybatis-plus配置</h2><p>新建文件MyBatisPlusConfiguration</p><p><strong>注意</strong> : 如果使用mp自带的控制逻辑删除和控制版本号还有分页功能,则需要添加这个配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.plus.demo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.injector.ISqlInjector;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.injector.LogicSqlInjector;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 控制逻辑删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ISqlInjector <span class="title">sqlInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LogicSqlInjector();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 控制版本号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-编写自动生成工具类"><a href="#7-编写自动生成工具类" class="headerlink" title="7. 编写自动生成工具类"></a>7. 编写自动生成工具类</h2><p><strong>注 :</strong> 直接把Controller/service/serviceImpl/dao/mapper/form/vo全部生成</p><p>此处使用默认velocity 模版引擎 则没有常用的crud方法,使用自己的模板则可以生成常用的crud方法</p><p>其中自定义模板中有工具类是公司自己的jar包,所以只推荐参考</p><p>拷贝mybatis-plus-generator jar包中的模板到自己项目resources下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.plus.demo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringPool;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.InjectionConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.converts.MySqlTypeConvert;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableInfo;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.DbColumnType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.IColumnType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 代码生成器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MabatisPlusGenerator</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String path = <span class="string">"E:\\idea\\springboot-mybatis-plus"</span>; <span class="comment">//文件路径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String table = <span class="string">"tm_user"</span>; <span class="comment">//table名字</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1. 全局配置</span></span><br><span class="line">        GlobalConfig config = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        config.setActiveRecord(<span class="keyword">false</span>) <span class="comment">// 是否支持AR模式</span></span><br><span class="line">            .setAuthor(<span class="string">"GMaya"</span>) <span class="comment">// 作者</span></span><br><span class="line">            .setSwagger2(<span class="keyword">true</span>) <span class="comment">// 使用Swagger</span></span><br><span class="line">            .setOutputDir(path + <span class="string">"/src/main/java"</span>) <span class="comment">// 生成路径</span></span><br><span class="line">            .setFileOverride(<span class="keyword">true</span>) <span class="comment">// 文件覆盖</span></span><br><span class="line">            .setIdType(IdType.AUTO) <span class="comment">// 主键策略</span></span><br><span class="line">            <span class="comment">// 自定义文件命名，注意 %s 会自动填充表实体属性！</span></span><br><span class="line">            .setServiceName(<span class="string">"%sService"</span>).setServiceImplName(<span class="string">"%sServiceImpl"</span>)</span><br><span class="line">            .setControllerName(<span class="string">"%sController"</span>).setMapperName(<span class="string">"%sDao"</span>).setXmlName(<span class="string">"%sMapper"</span>)</span><br><span class="line">            .setOpen(<span class="keyword">false</span>) <span class="comment">// 生成文件后 不打开文件夹</span></span><br><span class="line">            .setBaseResultMap(<span class="keyword">true</span>) <span class="comment">// XML ResultMap</span></span><br><span class="line">            .setBaseColumnList(<span class="keyword">true</span>); <span class="comment">// XML columList</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 数据源配置</span></span><br><span class="line">        DataSourceConfig dsConfig = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsConfig.setDbType(DbType.MYSQL) <span class="comment">// 设置数据库类型</span></span><br><span class="line">            .setDriverName(<span class="string">"com.mysql.jdbc.Driver"</span>)</span><br><span class="line">            .setUrl(</span><br><span class="line">                <span class="string">"jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8"</span>)</span><br><span class="line">            .setUsername(<span class="string">"root"</span>).setPassword(<span class="string">"admin"</span>).setTypeConvert(<span class="keyword">new</span> MySqlTypeConvert() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> IColumnType <span class="title">processTypeConvert</span><span class="params">(GlobalConfig globalConfig, String fieldType)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (fieldType.toLowerCase().contains(<span class="string">"tinyint"</span>)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> DbColumnType.BOOLEAN;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//将数据库中datetime转换成date</span></span><br><span class="line">                    <span class="keyword">if</span> (fieldType.toLowerCase().contains(<span class="string">"datetime"</span>)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> DbColumnType.DATE;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">super</span>.processTypeConvert(globalConfig, fieldType);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 策略配置</span></span><br><span class="line">        StrategyConfig stConfig = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        stConfig.setColumnNaming(NamingStrategy.underline_to_camel)</span><br><span class="line">            .setNaming(NamingStrategy.underline_to_camel) <span class="comment">// 数据库表映射到实体的命名策略</span></span><br><span class="line">            .setEntityLombokModel(<span class="keyword">true</span>) <span class="comment">// 使用Lombok</span></span><br><span class="line">            .setVersionFieldName(<span class="string">"version"</span>) <span class="comment">// 数据库版本控制字段</span></span><br><span class="line">            .setLogicDeleteFieldName(<span class="string">"status"</span>) <span class="comment">// 数据库逻辑删除字段</span></span><br><span class="line">            .setRestControllerStyle(<span class="keyword">true</span>)</span><br><span class="line">            .setSuperServiceClass(<span class="string">"com.baomidou.mybatisplus.extension.service.IService"</span>)</span><br><span class="line">            .setInclude(<span class="keyword">new</span> String[]&#123;table&#125;); <span class="comment">// 生成的表</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. 包名策略配置</span></span><br><span class="line">        PackageConfig pkConfig = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pkConfig.setParent(<span class="string">"com.mybatis.plus.demo"</span>).setMapper(<span class="string">"dao"</span>).setService(<span class="string">"service"</span>)</span><br><span class="line">            .setServiceImpl(<span class="string">"service.impl"</span>).setController(<span class="string">"controller"</span>).setEntity(<span class="string">"model"</span>);</span><br><span class="line">        <span class="comment">//5.自定义配置</span></span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        String templatePath = <span class="string">"/templates/mapper.xml.vm"</span>; <span class="comment">// 如果模板引擎是 velocity</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;(); <span class="comment">// 自定义输出配置</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123; <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// mapper自定义输出文件名</span></span><br><span class="line">                <span class="keyword">return</span> path + <span class="string">"/src/main/resources/mapper/"</span> + tableInfo.getEntityName() + <span class="string">"Mapper"</span></span><br><span class="line">                       + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// ------------form vo 使用默认模板请注释-begin-----------</span></span><br><span class="line">        templatePath = <span class="string">"/templates/entityForm.java.vm"</span>;</span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123; <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// form自定义输出文件名</span></span><br><span class="line">                <span class="keyword">return</span> path + <span class="string">"/src/main/java/com/mybatis/plus/demo/pojo/"</span> + tableInfo.getEntityName() + <span class="string">"Form"</span></span><br><span class="line">                       + StringPool.DOT_JAVA;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        templatePath = <span class="string">"/templates/entityVO.java.vm"</span>;</span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123; <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// VO自定义输出文件名</span></span><br><span class="line">                <span class="keyword">return</span> path + <span class="string">"/src/main/java/com/mybatis/plus/demo/pojo/"</span> + tableInfo.getEntityName() + <span class="string">"VO"</span></span><br><span class="line">                       + StringPool.DOT_JAVA;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// ------------form vo 使用默认模板请注释-end-----------</span></span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6 配置模板 自定义模板/在resources/templates 可以编辑</span></span><br><span class="line">        TemplateConfig templateConfig = <span class="keyword">new</span> TemplateConfig();</span><br><span class="line">        <span class="comment">// 关闭默认 xml 生成，调整生成 至 根目录</span></span><br><span class="line">        templateConfig.setEntity(<span class="string">"/templates/entity.java"</span>).setService(<span class="string">"/templates/service.java"</span>)</span><br><span class="line">            .setController(<span class="string">"/templates/controller.java"</span>).setMapper(<span class="string">"/templates/mapper.java"</span>)</span><br><span class="line">            .setServiceImpl(<span class="string">"/templates/serviceImpl.java"</span>).setXml(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7. 整合配置</span></span><br><span class="line">        AutoGenerator ag = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line">        ag.setGlobalConfig(config).setDataSource(dsConfig).setStrategy(stConfig).setCfg(cfg)</span><br><span class="line">            .setPackageInfo(pkConfig).setTemplate(templateConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//8. 执行</span></span><br><span class="line">        ag.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注 :</strong> 如果是使用自定义模板,请注意修改模板中的form,vo引入包路径等</p><p>使用默认模板请注释代码中生成form/vo代码</p><p>第一次运行可能有以下错误,如果没有请忽略</p><p><strong>问题1 :</strong> The server time zone value ‘ÖÐ¹ú±ê×¼Ê±¼ä’ is unrecognized or represents</p><p><strong>解决 :</strong> set global time_zone=’+8:00’</p><p><strong>问题2 :</strong> 使用Lombok插件,Idea,Eclipse必须安装改插件,否则找不到get/set方法</p><p><strong>解决 :</strong> IDEA安装Lombok步骤</p><p><img src="https://img-blog.csdnimg.cn/20190612104955146.png" alt="安装Lombok1"><br><img src="https://img-blog.csdnimg.cn/20190612105005460.png" alt="安装Lombok2"><br>Eclipse的自行百度  /滑稽</p><p>修改文件路径表名之后运行</p><p>生成结构图如下</p><p><img src="https://img-blog.csdnimg.cn/20190612105718114.png" alt="结构图"><br>perfect  ! ! !</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端开发" scheme="https://gmaya.top/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java" scheme="https://gmaya.top/tags/Java/"/>
    
      <category term="Mybatis-plus" scheme="https://gmaya.top/tags/Mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://gmaya.top/2019/12/16/hello-world/"/>
    <id>https://gmaya.top/2019/12/16/hello-world/</id>
    <published>2019-12-16T14:16:00.000Z</published>
    <updated>2020-01-10T07:33:23.030Z</updated>
    
    <content type="html"><![CDATA[<p>我的第一篇文章必须是Hello World , 这是对编程最基本的尊重!</p><a id="more"></a><h2 id="各种语言的Hello-World"><a href="#各种语言的Hello-World" class="headerlink" title="各种语言的Hello World"></a>各种语言的Hello World</h2><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ System.out.println(<span class="string">"Hello,World!"</span>);</span><br></pre></td></tr></table></figure><p>我说Java天下第一,你信么!</p><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">printf</span>(<span class="string">"Hello,World!"</span>);</span><br></pre></td></tr></table></figure><h3 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ std::cout &lt;&lt; <span class="string">"Hello,World!"</span> &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ &gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">"Hello,World!"</span>)</span><br></pre></td></tr></table></figure><h3 id="C-2"><a href="#C-2" class="headerlink" title="C#"></a>C#</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ Console.WriteLine(<span class="string">"Hello,World!"</span>);</span><br></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"Hello,World!"</span>;</span><br></pre></td></tr></table></figure><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ var sys = require(<span class="string">"sys"</span>);  </span><br><span class="line">  sys.puts(<span class="string">"Hello,World!"</span>);</span><br></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ puts  <span class="string">"Hello,World!"</span></span><br></pre></td></tr></table></figure><h3 id="R"><a href="#R" class="headerlink" title="R"></a>R</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">"Hello,World!"</span>)</span><br></pre></td></tr></table></figure><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ select <span class="string">'Hello,World!'</span> from dual;</span><br></pre></td></tr></table></figure><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ &lt;p&gt;Hello,World!&lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="VB"><a href="#VB" class="headerlink" title="VB"></a>VB</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ MsgBox(<span class="string">"Hello,World!"</span>)</span><br></pre></td></tr></table></figure><h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"Hello,World!"</span></span><br></pre></td></tr></table></figure><h3 id="Delphi"><a href="#Delphi" class="headerlink" title="Delphi"></a>Delphi</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ label1.Caption := <span class="string">'Hello,World!'</span>;</span><br></pre></td></tr></table></figure><h3 id="TCL"><a href="#TCL" class="headerlink" title="TCL"></a>TCL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ % puts <span class="string">"Hello,World!"</span></span><br></pre></td></tr></table></figure><h3 id="Pascal"><a href="#Pascal" class="headerlink" title="Pascal"></a>Pascal</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ writeln(<span class="string">'Hello, world!'</span>)</span><br></pre></td></tr></table></figure><p>我认输了, 我是菜鸟! 一个Hello, world! 打败我了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我的第一篇文章必须是Hello World , 这是对编程最基本的尊重!&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端开发" scheme="https://gmaya.top/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java" scheme="https://gmaya.top/tags/Java/"/>
    
  </entry>
  
</feed>
