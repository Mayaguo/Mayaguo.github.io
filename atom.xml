<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GMaya</title>
  
  <subtitle>生命不止，奋斗不息。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gmaya.top/"/>
  <updated>2020-04-10T09:28:36.054Z</updated>
  <id>https://gmaya.top/</id>
  
  <author>
    <name>GMaya</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Boot整合RabbitMQ入门</title>
    <link href="https://gmaya.top/2020/20200410/"/>
    <id>https://gmaya.top/2020/20200410/</id>
    <published>2020-04-10T09:22:31.000Z</published>
    <updated>2020-04-10T09:28:36.054Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/10/UnicornoftheSea_ZH-CN2949385175_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>RabbitMQ 即一个消息队列，主要是用来实现应用程序的异步和解耦，同时也能起到消息缓冲，消息分发的作用。</p></blockquote><p>安装完MQ，就该写个例子研究研究了。<br>新建Spring Boot 项目。</p><h2 id="修改pom文件"><a href="#修改pom文件" class="headerlink" title="修改pom文件"></a>修改pom文件</h2><p>新增RabbitMQ 支持</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>默认网页guest用户是不允许访问的，需要修改一下权限。上篇有写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: <span class="number">8088</span></span><br><span class="line">spring:</span><br><span class="line">  rabbitmq:</span><br><span class="line">    host: <span class="number">192.168</span><span class="number">.21</span><span class="number">.129</span></span><br><span class="line">    port: <span class="number">5672</span></span><br><span class="line">    username: guest</span><br><span class="line">    password: guest</span><br><span class="line">    virtual-host: /</span><br></pre></td></tr></table></figure><h2 id="四种交换机"><a href="#四种交换机" class="headerlink" title="四种交换机"></a>四种交换机</h2><p>交换机的功能主要是接收消息并且转发到绑定的队列，交换机不存储消息。</p><p>交换机有四种类型：Direct, topic, Headers and Fanout</p><blockquote><p>Direct是RabbitMQ默认的交换机模式,也是最简单的模式.即创建消息队列的时候,指定一个BindingKey.当发送者发送消息的时候,指定对应的Key.当Key和消息队列的BindingKey一致的时候,消息将会被发送到该消息队列中.</p></blockquote><blockquote><p>topic转发信息主要是依据通配符,队列和交换机的绑定主要是依据一种模式(通配符+字符串),而当发送消息的时候,只有指定的Key和该模式相匹配的时候,消息才会被发送到该消息队列中.</p></blockquote><blockquote><p>headers也是根据一个规则进行匹配,在消息队列和交换机绑定的时候会指定一组键值对规则,而发送消息的时候也会指定一组键值对规则,当两组键值对规则相匹配的时候,消息会被发送到匹配的消息队列中.</p></blockquote><blockquote><p>Fanout是路由广播的形式,将会把消息发给绑定它的全部队列,即便设置了key,也会被忽略.</p></blockquote><h2 id="Direct"><a href="#Direct" class="headerlink" title="Direct"></a>Direct</h2><h3 id="创建配置类"><a href="#创建配置类" class="headerlink" title="创建配置类"></a>创建配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息队列配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 16:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE = <span class="string">"hello-top-gmaya"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Direct Exchange（交换机最简单的方式）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">queue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// durable = true 开启持久化</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建生产者"><a href="#创建生产者" class="headerlink" title="创建生产者"></a>创建生产者</h3><p>用来提供消息产生的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息队列生产者,比如订单下完,需要生产一个邮件推送的消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 向key = MQConfig.QUEUE 中发送消息</span></span><br><span class="line">        <span class="keyword">this</span>.amqpTemplate.convertAndSend(MQConfig.QUEUE, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建消费者"><a href="#创建消费者" class="headerlink" title="创建消费者"></a>创建消费者</h3><p>用来消费消息的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息列队 , 消费者, 用来消费队列中的消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receiver</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 接收key = MQConfig.QUEUE 中消息</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiver</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>写个hello，然后调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Sender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHello</span><span class="params">(@RequestParam String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"hello自己的业务。。。"</span>);</span><br><span class="line">        sender.sender(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello rabbitmq!!!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:8088/hello?msg=你好啊" target="_blank" rel="noopener">http://localhost:8088/hello?msg=你好啊</a></p><p><img data-src="https://img-blog.csdnimg.cn/20200410104352630.png" alt=""></p><h2 id="topic"><a href="#topic" class="headerlink" title="topic"></a>topic</h2><h3 id="修改配置类"><a href="#修改配置类" class="headerlink" title="修改配置类"></a>修改配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息队列配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 16:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE = <span class="string">"hello-top-gmaya"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE_A = <span class="string">"topic-a"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE_B = <span class="string">"topic-b"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROUTING_KEYA = <span class="string">"topic.gmaya"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROUTING_KEYB = <span class="string">"topic.#"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC_EXCHANGE = <span class="string">"TOPIC_EXCHANGE"</span>; <span class="comment">// topic 交换机名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Direct Exchange（交换机最简单的方式）----begin</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">queue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// durable = true 开启持久化</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Direct Exchange（交换机最简单的方式）----end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Topic Exchange 可以用通配符 ---begin</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">topicQueueA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE_A, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">topicQueueB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE_B, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义topic交换机</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TopicExchange <span class="title">topicExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TopicExchange(TOPIC_EXCHANGE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// routing_key为topic.gmaya,就是完全匹配</span></span><br><span class="line">    <span class="comment">// 其实就相当于，你发送的时候 routing_key 和我的一样， 我就进入我的队列中，不然就不进</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">topicBindingA</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(topicQueueA()).to(topicExchange()).with(ROUTING_KEYA);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// routing_key为topic.#,就是模糊匹配</span></span><br><span class="line">    <span class="comment">// 其实就相当于，你发送的时候 routing_key 满足我的routing_key， 就进入我的队列中，不然就不进</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">topicBindingB</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(topicQueueB()).to(topicExchange()).with(ROUTING_KEYB);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Topic Exchange 可以用通配符 ---begin</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改生产者"><a href="#修改生产者" class="headerlink" title="修改生产者"></a>修改生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息队列生产者,比如订单下完,需要生产一个邮件推送的消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 向key = MQConfig.QUEUE 中发送消息</span></span><br><span class="line">        <span class="keyword">this</span>.amqpTemplate.convertAndSend(MQConfig.QUEUE, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">topicSender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"topic生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 交换机中发送消息</span></span><br><span class="line">        <span class="comment">// 这次是完全匹配， 结果应该a和b都能接收到</span></span><br><span class="line">        <span class="comment">// 因为b是模糊， 此条件满足模糊的条件，所有b会接收</span></span><br><span class="line">        <span class="keyword">this</span>.amqpTemplate.convertAndSend(MQConfig.TOPIC_EXCHANGE,MQConfig.ROUTING_KEYA, msg + <span class="string">"完全匹配"</span>);</span><br><span class="line">        <span class="comment">// 这次是模糊匹配，不满足a的条件，所以只有b模糊可以接收</span></span><br><span class="line"><span class="comment">//        this.amqpTemplate.convertAndSend(MQConfig.TOPIC_EXCHANGE,"topic.xixihaha", msg + "模糊匹配");</span></span><br><span class="line">        <span class="comment">// 这次是routing_key 不满足a，也不满足b。所以两个都接收不到。</span></span><br><span class="line"><span class="comment">//        this.amqpTemplate.convertAndSend(MQConfig.TOPIC_EXCHANGE,"gmaya.top", msg + "不存在");</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改消费者"><a href="#修改消费者" class="headerlink" title="修改消费者"></a>修改消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息列队 , 消费者, 用来消费队列中的消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receiver</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 接收key = MQConfig.QUEUE 中消息</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiver</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE_A)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiverA</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"QUEUE_A消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE_B)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiverB</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"QUEUE_B消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>完全匹配<br><img data-src="https://img-blog.csdnimg.cn/20200410113651384.png" alt=""><br>模糊匹配<br><img data-src="https://img-blog.csdnimg.cn/20200410113741617.png" alt=""></p><h2 id="Fanout"><a href="#Fanout" class="headerlink" title="Fanout"></a>Fanout</h2><h3 id="修改配置类-1"><a href="#修改配置类-1" class="headerlink" title="修改配置类"></a>修改配置类</h3><p>在topic配置类基础上新增代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Fanout Exchange 消息广播的模式 ---begin</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义Fanout交换机名称</span></span><br><span class="line"><span class="comment">// 不管路由键或者是路由模式，会把消息发给绑定给它的全部队列，如果配置了routing_key会被忽略。</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FanoutExchange <span class="title">fanoutExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> FanoutExchange(FANOUT_EXCHANGE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">fanoutBindingA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(topicQueueA()).to(fanoutExchange());</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">fanoutBindingB</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(topicQueueB()).to(fanoutExchange());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fanout Exchange 消息广播的模式 ---end</span></span><br></pre></td></tr></table></figure><p>消费者不需要更改（因为是使用的topic中的两个，已经写过了）</p><h3 id="修改生产者-1"><a href="#修改生产者-1" class="headerlink" title="修改生产者"></a>修改生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * fanout 模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fanoutSender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">    log.info(<span class="string">"fanout生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    <span class="comment">// 会把消息发送给 所有绑定到此交换机的全部列队；routing_key会被忽略。</span></span><br><span class="line">    <span class="keyword">this</span>.amqpTemplate.convertAndSend(MQConfig.FANOUT_EXCHANGE, <span class="string">""</span>, msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Sender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHello</span><span class="params">(@RequestParam String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"hello自己的业务。。。"</span>);</span><br><span class="line"><span class="comment">//        sender.sender(msg);</span></span><br><span class="line"><span class="comment">//        sender.topicSender(msg);</span></span><br><span class="line">        sender.fanoutSender(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello rabbitmq!!!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200410141531194.png" alt=""></p><h2 id="延迟队列（死信队列）"><a href="#延迟队列（死信队列）" class="headerlink" title="延迟队列（死信队列）"></a>延迟队列（死信队列）</h2><p>模拟订单创建完，如果30分钟后还没有支付，则取消订单。<br>要实现的办法很多， 使用RabbitMQ延迟队列是其中一个办法！</p><p>使用死信队列大致思路：<br><img data-src="https://img-blog.csdnimg.cn/202004101700583.png" alt=""></p><h3 id="订单MQ配置类"><a href="#订单MQ配置类" class="headerlink" title="订单MQ配置类"></a>订单MQ配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单业务配置</span></span><br><span class="line"><span class="comment"> * 死信对列使用的 orderTTLExchange，orderTTLQueue，orderTTLKey</span></span><br><span class="line"><span class="comment"> * 正常对列使用的 orderExchange，orderQueue，orderKey</span></span><br><span class="line"><span class="comment"> * 在orderTTLQueue中设置，当消息设置的时间到了，消失了，那么我就去调用orderQueue，orderKey，通知它。</span></span><br><span class="line"><span class="comment"> * 其实没有对应的rderTTLQueue消费类，肯定到期就没了，然后就实现了一定时间后把消息传给某个队列。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/10 15:37</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建延迟队列(死信对列)交换机orderTTLExchange</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DirectExchange <span class="title">orderTTLExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DirectExchange(<span class="string">"orderTTLExchange"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建实际消费交换机orderExchange</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DirectExchange <span class="title">orderExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DirectExchange(<span class="string">"orderExchange"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建延迟队列(死信对列)orderTTLQueue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">orderTTLQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"x-dead-letter-exchange"</span>, <span class="string">"orderExchange"</span>); <span class="comment">// 到期后转发的交换机</span></span><br><span class="line">        map.put(<span class="string">"x-dead-letter-routing-key"</span>, <span class="string">"orderKey"</span>); <span class="comment">// 到期后转发的路由key</span></span><br><span class="line">        <span class="keyword">return</span> QueueBuilder.durable(<span class="string">"orderTTLQueue"</span>).withArguments(map).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建实际orderQueue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">orderQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(<span class="string">"orderQueue"</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将（延迟队列orderTTLQueue）和（交换机orderTTLExchange）绑定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">orderTTLBinding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(orderTTLQueue()).to(orderTTLExchange()).with(<span class="string">"orderTTLKey"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将（延迟队列orderQueue）和（交换机orderExchange）绑定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">orderBinding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(orderQueue()).to(orderExchange()).with(<span class="string">"orderKey"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="订单生产者"><a href="#订单生产者" class="headerlink" title="订单生产者"></a>订单生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单消息生产着</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/10 15:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderSender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"生产者===订单号：&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 这里把消息生产出来，传到TTL的队列中去，那么到期还没有被消费，就认为死信息，就会调用设置好的队列了</span></span><br><span class="line">        amqpTemplate.convertAndSend(<span class="string">"orderTTLExchange"</span>, <span class="string">"orderTTLKey"</span>, msg, <span class="keyword">new</span> MessagePostProcessor() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Message <span class="title">postProcessMessage</span><span class="params">(Message message)</span> <span class="keyword">throws</span> AmqpException </span>&#123;</span><br><span class="line">                <span class="comment">// 设置失效时间，毫秒，一般订单设置30分钟,30*60*1000</span></span><br><span class="line">                <span class="comment">// 过期直接转发到指定的路由</span></span><br><span class="line">                <span class="comment">// 由于模拟设置20秒</span></span><br><span class="line">                MessageProperties messageProperties = message.getMessageProperties();</span><br><span class="line">                messageProperties.setContentEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">                messageProperties.setExpiration(<span class="string">"20000"</span>);</span><br><span class="line">                <span class="keyword">return</span> message;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="订单消费者"><a href="#订单消费者" class="headerlink" title="订单消费者"></a>订单消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单消息消费者</span></span><br><span class="line"><span class="comment"> * 主要用于检查订单状态是否支付</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/10 15:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderReceiver</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 这里只是消费了orderQueue。没有人去消费orderTTLQueue.一旦写了TTL那么就是实时消费了，不叫死信了。</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = <span class="string">"orderQueue"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">orderMsg</span><span class="params">(String msg)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        log.info(<span class="string">"消费者===订单号：&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// TODO 处理判断此订单状态是否支付，如果没有支付则取消订单！</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用测试"><a href="#调用测试" class="headerlink" title="调用测试"></a>调用测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:37</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderSender orderSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"order"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOrder</span><span class="params">(@RequestParam String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"Order创建成功。。。"</span>);</span><br><span class="line">        orderSender.sendMsg(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"order创建成功！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模拟20秒后进行实际调用处理<br>将20秒换成30分钟，实现超过30分钟还未支付的订单处理<br><img data-src="https://img-blog.csdnimg.cn/20200410170553124.png" alt=""><br><img data-src="https://img-blog.csdnimg.cn/20200410170805913.png" alt=""><br>上述代码全部上传到gitee。<br>项目地址：<a href="https://gitee.com/GMaya/springboot-rabbitmq" target="_blank" rel="noopener">https://gitee.com/GMaya/springboot-rabbitmq</a><br>欢迎star</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/10/UnicornoftheSea_ZH-CN2949385175_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://gmaya.top/categories/Java/"/>
    
    
      <category term="RabbitMQ" scheme="https://gmaya.top/tags/RabbitMQ/"/>
    
      <category term="Spring Boot" scheme="https://gmaya.top/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Linux下安装RabbitMQ入门级别</title>
    <link href="https://gmaya.top/2020/20200409/"/>
    <id>https://gmaya.top/2020/20200409/</id>
    <published>2020-04-09T12:18:12.000Z</published>
    <updated>2020-04-09T12:23:13.418Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/09/SantoriniAerial_ZH-CN9367767863_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="Linux安装RabbitMQ"><a href="#Linux安装RabbitMQ" class="headerlink" title="Linux安装RabbitMQ"></a>Linux安装RabbitMQ</h2><h3 id="安装erlang环境"><a href="#安装erlang环境" class="headerlink" title="安装erlang环境"></a>安装erlang环境</h3><blockquote><p>由于RabbitMQ是基于Erlang（面向高并发的语言）语言开发，所以在安装RabbitMQ之前，需要先安装Erlang。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install epel<span class="literal">-release</span></span><br><span class="line">yum <span class="literal">-y</span> update</span><br><span class="line">yum <span class="literal">-y</span> install erlang socat</span><br></pre></td></tr></table></figure><p>查看erlang版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">erl <span class="literal">-version</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/2020040915052285.png" alt=""></p><h3 id="安装RabbitMQ"><a href="#安装RabbitMQ" class="headerlink" title="安装RabbitMQ"></a>安装RabbitMQ</h3><p><strong>下载RabbitMQ</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.rabbitmq.com/releases/rabbitmq<span class="literal">-server</span>/v3.<span class="number">6.15</span>/rabbitmq<span class="literal">-server</span><span class="literal">-3</span>.<span class="number">6.15</span><span class="literal">-1</span>.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p><strong>提示:</strong> 如果你没有wget,请先安装wget </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install wget</span><br></pre></td></tr></table></figure><p><strong>安装RabbitMQ</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install rabbitmq<span class="literal">-server</span><span class="literal">-3</span>.<span class="number">6.15</span><span class="literal">-1</span>.el7.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>添加开机启动RabbitMQ服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable rabbitmq<span class="literal">-server</span>.service</span><br></pre></td></tr></table></figure><p>启动web控制台</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq<span class="literal">-plugins</span> enable rabbitmq_management</span><br></pre></td></tr></table></figure><p>防火墙开放15672和5672端口</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables <span class="literal">-I</span> INPUT <span class="literal">-p</span> tcp -<span class="literal">-dport</span> <span class="number">15672</span> <span class="literal">-j</span> ACCEPT</span><br><span class="line">/sbin/iptables <span class="literal">-I</span> INPUT <span class="literal">-p</span> tcp -<span class="literal">-dport</span> <span class="number">5672</span> <span class="literal">-j</span> ACCEPT</span><br></pre></td></tr></table></figure><p>默认网页guest用户是不允许访问的，需要修改一下权限</p><p>修改配置文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/rabbitmq/lib/rabbitmq_server<span class="literal">-3</span>.<span class="number">6.5</span>/ebin/rabbit.app</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200409195424631.png" alt=""><br>启动, 停止 , 重启</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service rabbitmq<span class="literal">-server</span> start</span><br><span class="line">service rabbitmq<span class="literal">-server</span> stop</span><br><span class="line">service rabbitmq<span class="literal">-server</span> restart</span><br></pre></td></tr></table></figure><p>注：有可能起不来 。。。</p><p>进入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib/rabbitmq/bin</span><br></pre></td></tr></table></figure><p>启动 加 -detached 后台启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rabbitmq<span class="literal">-server</span> start <span class="literal">-detached</span></span><br></pre></td></tr></table></figure><p>浏览器输入ip:15672<br>输入guest     guest<br><img data-src="https://img-blog.csdnimg.cn/20200409153400333.png" alt=""></p><p>服气，各种版本不一致问题，提不起来，项目访问不到，端口不通，这个安装感觉比oracle都麻烦！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/09/SantoriniAerial_ZH-CN9367767863_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://gmaya.top/categories/Java/"/>
    
    
      <category term="RabbitMQ" scheme="https://gmaya.top/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>Java中的多重for循环怎么跳出最外层</title>
    <link href="https://gmaya.top/2020/20200408/"/>
    <id>https://gmaya.top/2020/20200408/</id>
    <published>2020-04-08T06:01:12.000Z</published>
    <updated>2020-04-08T06:03:48.024Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/08/PinkMoon_ZH-CN9026483067_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="笔记记录"><a href="#笔记记录" class="headerlink" title="笔记记录"></a>笔记记录</h2><p>不加任何代码,最里层的break,只能跳出最内层的循环, 如果想要跳出最外面的,就要新增一个标记.<br>在想要跳出循环的地方加标记,然后break标记.</p><p>同理换成continue 标记; 效果一样.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试多重for循环 break</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">forTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line">    tab: <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">"我是i...."</span> + i);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a; j++) &#123;</span><br><span class="line">            System.out.println(<span class="string">"我是j...."</span> + j);</span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span> tab;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/08/PinkMoon_ZH-CN9026483067_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://gmaya.top/categories/Java/"/>
    
    
      <category term="Java" scheme="https://gmaya.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Python一键获取所有高清无码王者皮肤图片</title>
    <link href="https://gmaya.top/2020/20200406/"/>
    <id>https://gmaya.top/2020/20200406/</id>
    <published>2020-04-06T08:20:33.000Z</published>
    <updated>2020-04-06T08:20:45.809Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/06/CastleDay_ZH-CN8752542375_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>突然看到王者荣耀每个英雄的图片很不错,所有就一张一张保存了.</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>1.打开王者荣耀官方英雄列表<br>2.分析接口<br>3.实际操作<br>4.调整代码<br>5.开始启动程序</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>其中中间发现,获取的页面中并没有直接找到图片的地址, 所以先拿到皮肤名称拼接成图片链接,然后真正拿到高清无码皮肤图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: gbk -*-#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Name:         WZRYImpageDemo</span></span><br><span class="line"><span class="comment"># Description:  多线程获取王者荣耀所有英雄高清皮肤</span></span><br><span class="line"><span class="comment"># Author:       GMaya</span></span><br><span class="line"><span class="comment"># Date:         2020/4/6 14:56</span></span><br><span class="line"><span class="comment"># -------------------------------------------------------</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, json, re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建会话对象</span></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'origin'</span>: <span class="string">'https://pvp.qq.com'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有英雄列表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hero_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 请求接口</span></span><br><span class="line">    result = session.get(<span class="string">'https://pvp.qq.com/web201605/js/herolist.json'</span>, headers=headers)</span><br><span class="line">    <span class="comment"># 解析json结果</span></span><br><span class="line">    resJson = json.loads(result.text)</span><br><span class="line">    <span class="keyword">for</span> res <span class="keyword">in</span> resJson:</span><br><span class="line">        <span class="comment"># 英雄名称</span></span><br><span class="line">        cname = res.get(<span class="string">'cname'</span>)</span><br><span class="line">        <span class="comment"># 英雄详情页id</span></span><br><span class="line">        ename = res.get(<span class="string">'ename'</span>)</span><br><span class="line">        <span class="comment"># 多线程获取详细页</span></span><br><span class="line">        myThread(cname, ename).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取英雄详情页面信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hero_tail</span><span class="params">(ename, cname)</span>:</span></span><br><span class="line">    <span class="comment"># 请求接口</span></span><br><span class="line">    result = session.get(<span class="string">'https://pvp.qq.com/web201605/herodetail/%s.shtml'</span> % ename, headers=headers)</span><br><span class="line">    result.encoding = <span class="string">'gbk'</span></span><br><span class="line">    zz = <span class="string">"""&lt;ul class="pic-pf-list pic-pf-list3" data-imgname="(.*?)"&gt;"""</span></span><br><span class="line">    <span class="comment"># 由于爬取的页面和网页上看到的实际效果不一致,所以这里拿取所有皮肤名称,直接去皮肤服务器拿取</span></span><br><span class="line">    res_tail = re.findall(zz, result.text)[<span class="number">0</span>]</span><br><span class="line">    res_tail_list = res_tail.split(<span class="string">'|'</span>)</span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> tail <span class="keyword">in</span> res_tail_list:</span><br><span class="line">        imgName = cname + <span class="string">'-'</span> + tail</span><br><span class="line">        <span class="comment"># 下载具体图片</span></span><br><span class="line">        get_hero_skin(ename, count, imgName)</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存下载图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hero_skin</span><span class="params">(ename, i, imgName)</span>:</span></span><br><span class="line">    url = <span class="string">"http://game.gtimg.cn/images/yxzj/img201606/skin/hero-info/%s/%s-bigskin-%d.jpg"</span> % (ename, ename, i)</span><br><span class="line">    <span class="comment"># 拼接最后的图片地址,然后保存</span></span><br><span class="line">    res_skin = session.get(url)</span><br><span class="line">    file = <span class="string">'D:\download\爬虫图片目录\王者荣耀图片\%s.jpg'</span> % imgName</span><br><span class="line">    <span class="comment"># wb : 以二进制格式打开一个文件只用于写入。一般用于非文本文件如图片等。</span></span><br><span class="line">    <span class="keyword">with</span> open(file, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(res_skin.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建线程类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, cname, ename)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.cname = cname</span><br><span class="line">        self.ename = ename</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"开始线程："</span> + self.cname)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            get_hero_tail(self.ename, self.cname)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            print(<span class="string">'线程出现意外....'</span> + self.name)</span><br><span class="line">        print(<span class="string">"退出线程："</span> + self.cname)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 开始</span></span><br><span class="line">    get_hero_list()</span><br></pre></td></tr></table></figure><p>也没有具体的计算, 这三百多个将近四百个, 其中包含英雄本身的图片,所以真正的皮肤应该是200多个.应该是全了.说实话,300kb左右的图片, 已经很清楚了</p><p><img data-src="https://img-blog.csdnimg.cn/20200406161040494.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/06/CastleDay_ZH-CN8752542375_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://gmaya.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gmaya.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python听说网易云音乐的评论很有意思</title>
    <link href="https://gmaya.top/2020/20200405/"/>
    <id>https://gmaya.top/2020/20200405/</id>
    <published>2020-04-05T15:22:33.000Z</published>
    <updated>2020-04-05T16:12:57.709Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/06/KissimmeeFrog_ZH-CN8379824947_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>听歌哪个平台好不知道， 但是要说评论，那就是网易云音乐。<br>看看云音乐热歌榜所有歌曲的评论吧。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>其实重点是分析各个页面和接口， 只要分析到位，没有拿不到的信息。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>其中headers和data 的信息自己从浏览器拿一下就好了.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Name:         Music163</span></span><br><span class="line"><span class="comment"># Description:  获取网易云音乐精彩评论</span></span><br><span class="line"><span class="comment"># Author:       GMaya</span></span><br><span class="line"><span class="comment"># Date:         2020/4/5 21:45</span></span><br><span class="line"><span class="comment"># -------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, re, json, datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.创建会话对象</span></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'xxx'</span>&#125;</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">"params"</span>: <span class="string">"xxx"</span></span><br><span class="line">    ,</span><br><span class="line">    <span class="string">"encSecKey"</span>: <span class="string">"xxx"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件保存位置</span></span><br><span class="line">file = <span class="string">'D:\download\music163.txt'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据歌曲id 获取所有精彩评论</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_music_comment</span><span class="params">(songid)</span>:</span></span><br><span class="line">    url = <span class="string">"https://music.163.com/weapi/v1/resource/comments/R_SO_4_%d?csrf_token="</span> % songid</span><br><span class="line">    result = session.post(url, headers=headers, data=data)</span><br><span class="line">    res = json.loads(result.text)</span><br><span class="line">    hotComments = res.get(<span class="string">'hotComments'</span>)</span><br><span class="line">    <span class="keyword">for</span> hot <span class="keyword">in</span> hotComments:</span><br><span class="line">        <span class="comment"># 热评内容</span></span><br><span class="line">        content = hot.get(<span class="string">'content'</span>).replace(<span class="string">'\n'</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="comment"># 昵称</span></span><br><span class="line">        nickname = hot.get(<span class="string">'user'</span>).get(<span class="string">'nickname'</span>)</span><br><span class="line">        <span class="comment"># 评论时间</span></span><br><span class="line">        hottime = int(hot.get(<span class="string">'time'</span>)) / <span class="number">1000</span></span><br><span class="line">        hottime = datetime.datetime.fromtimestamp(hottime).strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">        <span class="comment"># 点赞人数</span></span><br><span class="line">        likedCount = hot.get(<span class="string">'likedCount'</span>)</span><br><span class="line">        consequence = <span class="string">'[昵称:]%s,[评论时间:]%s,[点赞人数:]%d,[热评内容:]%s'</span> % (nickname, hottime, likedCount, content)</span><br><span class="line">        <span class="comment"># 保存评论信息</span></span><br><span class="line">        <span class="keyword">with</span> open(file, <span class="string">'a+'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(consequence + <span class="string">'\n'</span>)  <span class="comment"># 加\n换行显示</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取热歌排行榜所有歌曲id</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_song</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"https://music.163.com/m/discover/toplist?id=3778678"</span></span><br><span class="line">    result = session.get(url, headers=headers)</span><br><span class="line">    res = <span class="string">"""&lt;ul class="f-hide"&gt;(.*?)&lt;/ul&gt;"""</span></span><br><span class="line">    resul = re.findall(res, result.text)</span><br><span class="line">    print(resul)</span><br><span class="line">    <span class="keyword">for</span> ress <span class="keyword">in</span> resul:</span><br><span class="line">        res2 = <span class="string">"""&lt;li&gt;&lt;a href="\/song\?id=(.*?)"&gt;(.*?)&lt;/a&gt;&lt;/li&gt;"""</span></span><br><span class="line">        resul2 = re.findall(res2, ress)</span><br><span class="line">        <span class="comment"># print(resul2)</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> resul2:</span><br><span class="line">            songid = int(r[<span class="number">0</span>])</span><br><span class="line">            songname = r[<span class="number">1</span>]</span><br><span class="line">            print(<span class="string">"开始下载[%s]歌曲评论"</span> % songname)</span><br><span class="line">            consequence = <span class="string">'===========歌曲名称: %s==============='</span> % songname</span><br><span class="line">            <span class="keyword">with</span> open(file, <span class="string">'a+'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(consequence + <span class="string">'\n'</span>)  <span class="comment"># 加\n换行显示</span></span><br><span class="line">            <span class="comment"># 开始下载评论</span></span><br><span class="line">            get_music_comment(songid)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_song()</span><br></pre></td></tr></table></figure><p>最后文件是保存到本地磁盘, 还是数据库,根据自己的方式决定</p><p>思路:<br>我之前写过<a href="https://blog.csdn.net/gfl1427097103/article/details/104718337" target="_blank" rel="noopener">获取qq音乐分享链接</a>可以根据歌名 获得到歌曲id等链接, 这个网易云根据歌名获取歌曲id也不难,这个时候应该可以做一个对接qq或者微信的机器人, 用户在qq群输入歌名,直接返回最热的一条评论!</p><p><img data-src="https://img-blog.csdnimg.cn/20200406000153654.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/06/KissimmeeFrog_ZH-CN8379824947_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://gmaya.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gmaya.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python一键珍藏我的动漫妹子们</title>
    <link href="https://gmaya.top/2020/20200404/"/>
    <id>https://gmaya.top/2020/20200404/</id>
    <published>2020-04-04T10:02:31.000Z</published>
    <updated>2020-04-04T10:07:14.406Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/04/--Fate-4k.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>获取点动漫图片,还要一张一张保存,这多难受.<br>话不多说,练练手</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>获取图片步骤:</p><ol><li>找到图片来源网站</li><li>分析网站页面数据结构</li><li>分析下一页结果</li><li>分析数据处理</li><li>保存</li></ol><p>本次找到的图片来源是<a href="http://pic.netbian.com/4kdongman/index.html" target="_blank" rel="noopener">http://pic.netbian.com/4kdongman/index.html</a><br>都是高清4k动漫大妹子</p><p>然后F12找到图片位置的标签等,然后使用正则匹配</p><p>点击下一个看到,后缀 index_2   index_3  所以,下一页数据只需要下划线加本页页数即可</p><p>开鲁代码</p><h2 id="展示真正的技术"><a href="#展示真正的技术" class="headerlink" title="展示真正的技术"></a>展示真正的技术</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding=gbk -*-</span></span><br><span class="line"><span class="comment"># @Author: GMaya</span></span><br><span class="line"><span class="comment"># 爬取动漫图片,嘎嘎</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, time, re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.创建会话对象</span></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取目标网页结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_result</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment"># 请求接口</span></span><br><span class="line">    result = session.get(url)</span><br><span class="line">    <span class="comment"># 编码格式</span></span><br><span class="line">    result.encoding = <span class="string">'gbk'</span></span><br><span class="line">    <span class="string">""" 正则表达式,匹配对应数据</span></span><br><span class="line"><span class="string">        注意:href="(.*?)" , 如果 .*? 被括号包裹, 则输出括号内的内容</span></span><br><span class="line"><span class="string">            如果没有括号, 则输出整个匹配的内容</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">    res = <span class="string">"""&lt;a href="(.*?)" target="_blank"&gt;&lt;img src=".*?" alt=".*?" /&gt;&lt;b&gt;.*?&lt;/b&gt;&lt;/a&gt;"""</span></span><br><span class="line">    <span class="comment"># 匹配符合正则内容</span></span><br><span class="line">    <span class="keyword">return</span> re.findall(res, result.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析详情页数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two_result</span><span class="params">(contents)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> con <span class="keyword">in</span> contents:</span><br><span class="line">        <span class="comment"># 去第详情页,获取清晰度比较高的图片</span></span><br><span class="line">        result2 = session.get(<span class="string">'http://pic.netbian.com/'</span> + con)</span><br><span class="line">        result2.encoding = <span class="string">'gbk'</span></span><br><span class="line">        res2 = <span class="string">"""&lt;a href="" id="img"&gt;&lt;img src="(.*?)" data-pic=".*?" alt="(.*?)" title=".*?"&gt;&lt;/a&gt;"""</span></span><br><span class="line">        <span class="comment"># 匹配符合正则内容</span></span><br><span class="line">        contents2 = re.findall(res2, result2.text)</span><br><span class="line">        <span class="comment"># 真正处理数据并保存</span></span><br><span class="line">        save_result(contents2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 真正处理数据并保存</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_result</span><span class="params">(contents2)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> con2 <span class="keyword">in</span> contents2:</span><br><span class="line">        path = con2[<span class="number">0</span>]  <span class="comment"># 图片真正的高清图片地址</span></span><br><span class="line">        name = con2[<span class="number">1</span>]  <span class="comment"># 图片名称</span></span><br><span class="line">        <span class="comment"># 拼接最后的图片地址,然后保存</span></span><br><span class="line">        result3 = session.get(<span class="string">'http://pic.netbian.com/'</span> + path)</span><br><span class="line">        file = <span class="string">'D:\download\dongmanImg\%s.jpg'</span> % name</span><br><span class="line">        <span class="comment"># wb : 以二进制格式打开一个文件只用于写入。一般用于非文本文件如图片等。</span></span><br><span class="line">        <span class="keyword">with</span> open(file, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(result3.content)</span><br><span class="line">        <span class="comment"># 安全点就等待0.5秒再次爬取</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'下载动漫图片开始--------------'</span>)</span><br><span class="line">    <span class="comment"># 爬取前一百页内容</span></span><br><span class="line">    pageno = <span class="number">100</span></span><br><span class="line">    <span class="comment"># 1.请求网页,获取结果</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pageno):</span><br><span class="line">        print(<span class="string">'解析处理第%d页数据 请稍等...'</span> % i)</span><br><span class="line">        <span class="comment"># 第一个和其他页有点不同,所以分开处理</span></span><br><span class="line">        url = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">1</span>:</span><br><span class="line">            url = <span class="string">"http://pic.netbian.com/4kdongman/index.html"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            url = <span class="string">"http://pic.netbian.com/4kdongman/index_%d.html"</span> % i</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 得到网页响应结果</span></span><br><span class="line">        result = get_result(url)</span><br><span class="line">        <span class="comment"># 处理详情页数据</span></span><br><span class="line">        two_result(result)</span><br><span class="line">        print(<span class="string">'第%d页数据共%d个,处理完毕.'</span> % (i, len(result)))</span><br><span class="line">        <span class="comment"># 每次请求间隔0.5秒</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'下载动漫图片结束--------------'</span>)</span><br></pre></td></tr></table></figure><p>喝陪咖啡,静等一会<br><img data-src="https://img-blog.csdnimg.cn/20200404171241313.png" alt=""><br><img data-src="https://img-blog.csdnimg.cn/20200404171317589.png" alt=""></p><p><strong>说明: 只是用作技术练习.请勿恶意使用</strong></p><h2 id="多线程爬取"><a href="#多线程爬取" class="headerlink" title="多线程爬取"></a>多线程爬取</h2><p>上面单线程爬取了两杯咖啡时间, 到30页的时候,我停止了,太慢了,咋办,多线程搞上!</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding=gbk -*-</span></span><br><span class="line"><span class="comment"># @Author: GMaya</span></span><br><span class="line"><span class="comment"># 爬取动漫图片,多线程例子</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, time, re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.创建会话对象</span></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取目标网页结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_result</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment"># 请求接口</span></span><br><span class="line">    result = session.get(url)</span><br><span class="line">    <span class="comment"># 编码格式</span></span><br><span class="line">    result.encoding = <span class="string">'gbk'</span></span><br><span class="line">    <span class="string">""" 正则表达式,匹配对应数据</span></span><br><span class="line"><span class="string">        注意:href="(.*?)" , 如果 .*? 被括号包裹, 则输出括号内的内容</span></span><br><span class="line"><span class="string">            如果没有括号, 则输出整个匹配的内容</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">    res = <span class="string">"""&lt;a href="(.*?)" target="_blank"&gt;&lt;img src=".*?" alt=".*?" /&gt;&lt;b&gt;.*?&lt;/b&gt;&lt;/a&gt;"""</span></span><br><span class="line">    <span class="comment"># 匹配符合正则内容</span></span><br><span class="line">    <span class="keyword">return</span> re.findall(res, result.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析详情页数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two_result</span><span class="params">(contents)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> con <span class="keyword">in</span> contents:</span><br><span class="line">        <span class="comment"># 去第详情页,获取清晰度比较高的图片</span></span><br><span class="line">        result2 = session.get(<span class="string">'http://pic.netbian.com/'</span> + con)</span><br><span class="line">        result2.encoding = <span class="string">'gbk'</span></span><br><span class="line">        res2 = <span class="string">"""&lt;a href="" id="img"&gt;&lt;img src="(.*?)" data-pic=".*?" alt="(.*?)" title=".*?"&gt;&lt;/a&gt;"""</span></span><br><span class="line">        <span class="comment"># 匹配符合正则内容</span></span><br><span class="line">        contents2 = re.findall(res2, result2.text)</span><br><span class="line">        <span class="comment"># 真正处理数据并保存</span></span><br><span class="line">        save_result(contents2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 真正处理数据并保存</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_result</span><span class="params">(contents2)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> con2 <span class="keyword">in</span> contents2:</span><br><span class="line">        path = con2[<span class="number">0</span>]  <span class="comment"># 图片真正的高清图片地址</span></span><br><span class="line">        name = con2[<span class="number">1</span>]  <span class="comment"># 图片名称</span></span><br><span class="line">        <span class="comment"># 拼接最后的图片地址,然后保存</span></span><br><span class="line">        result3 = session.get(<span class="string">'http://pic.netbian.com/'</span> + path)</span><br><span class="line">        file = <span class="string">'D:\download\dongmanThreadImg\%s.jpg'</span> % name</span><br><span class="line">        <span class="comment"># wb : 以二进制格式打开一个文件只用于写入。一般用于非文本文件如图片等。</span></span><br><span class="line">        <span class="keyword">with</span> open(file, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(result3.content)</span><br><span class="line">        <span class="comment"># 安全点就等待0.5秒再次爬取</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建线程类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, threadID, name, url)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.threadID = threadID</span><br><span class="line">        self.name = name</span><br><span class="line">        self.url = url</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"开始线程："</span> + self.name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 得到网页响应结果</span></span><br><span class="line">            result = get_result(self.url)</span><br><span class="line">            <span class="comment"># 处理详情页数据</span></span><br><span class="line">            two_result(result)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            print(<span class="string">'线程出现意外....'</span> + self.name)</span><br><span class="line">        print(<span class="string">"退出线程："</span> + self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'下载动漫图片开始--------------'</span>)</span><br><span class="line">    <span class="comment"># 爬取前一百页内容</span></span><br><span class="line">    pageno = <span class="number">100</span></span><br><span class="line">    <span class="comment"># 1.请求网页,获取结果</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pageno):</span><br><span class="line">        print(<span class="string">'解析处理第%d页数据 请稍等...'</span> % i)</span><br><span class="line">        <span class="comment"># 第一个和其他页有点不同,所以分开处理</span></span><br><span class="line">        url = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">1</span>:</span><br><span class="line">            url = <span class="string">"http://pic.netbian.com/4kdongman/index.html"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            url = <span class="string">"http://pic.netbian.com/4kdongman/index_%d.html"</span> % i</span><br><span class="line">        <span class="comment"># 开启线程,爬取几页就开启几个线程,量力而行</span></span><br><span class="line">        myThread(i, <span class="string">"thread-"</span> + str(i), url).start()</span><br><span class="line">    <span class="comment"># 每次请求间隔0.5秒</span></span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'下载动漫图片结束--------------'</span>)</span><br></pre></td></tr></table></figure><p>秒开100线程,每个线程独自爬取,这还没反应过来, 就结束了,<br>我只能说好快</p><p>提示:最好还是把代码try 一下, 如果中间有意外,可以忽略,</p><p><img data-src="https://img-blog.csdnimg.cn/20200404174634627.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/04/--Fate-4k.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://gmaya.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gmaya.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python的第一个web项目</title>
    <link href="https://gmaya.top/2020/20200403-2/"/>
    <id>https://gmaya.top/2020/20200403-2/</id>
    <published>2020-04-03T13:15:12.000Z</published>
    <updated>2020-04-03T13:31:24.814Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/03/MalhamStars_ZH-CN4163177154_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>来一个hello python 吧</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>项目名称: pythonwebdemo<br>应用名称: webdemo</p><p><img data-src="https://img-blog.csdnimg.cn/20200403161246601.png" alt=""><br>完成之后,二话不多说,启动!!!<br><img data-src="https://img-blog.csdnimg.cn/20200403161454528.png" alt=""></p><p>然后点击默认地址 ,访问</p><p><img data-src="https://img-blog.csdnimg.cn/20200403161530711.png" alt=""><br><img data-src="https://img-blog.csdnimg.cn/20200403161620674.png" alt=""><br>成功!</p><h2 id="hello页面"><a href="#hello页面" class="headerlink" title="hello页面"></a>hello页面</h2><p>urls.py 文件修改<br>页面请求hello路径, 找到views中的hello接口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> webdemo <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">r'hello/'</span>, views.hello)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>views.py 文件修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="comment"># 将请求定位到hello.html中</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'hello.html'</span>)</span><br></pre></td></tr></table></figure><p>templates 文件夹下新增hello.heml页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;hello&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Hello Pyhton!!!<span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">&lt;h2&gt;Hello Pyhton!!!<span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line">&lt;h3&gt;Hello Pyhton!!!<span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">&lt;h4&gt;Hello Pyhton!!!<span class="xml"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line">&lt;h5&gt;Hello Pyhton!!!<span class="xml"><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>启动,<br>访问<a href="http://127.0.0.1:8000/hello/" target="_blank" rel="noopener">http://127.0.0.1:8000/hello/</a><br><img data-src="https://img-blog.csdnimg.cn/20200403163423335.png" alt=""></p><h2 id="加上数据库操作"><a href="#加上数据库操作" class="headerlink" title="加上数据库操作"></a>加上数据库操作</h2><p>settings.py 文件修改<br>数据库默认的sqlite,其实这个数据库也不错,简单的保存也不需要密码啥的,就是性能不中<br>当初在写epl插件的时候,一般都是使用的sqlite,客户不需要安装数据库,直接本地生成了一个.db文件,简单了好多</p><p>下面时区和语言在下面搜索一下即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'python'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="number">3306</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure><p>urls.py 文件修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">r'helloMysql/'</span>, views.helloMysql)</span><br></pre></td></tr></table></figure><p>views.py 文件修改<br>简简单单来个返回结果封装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">helloMysql</span><span class="params">(request)</span>:</span></span><br><span class="line">    data = &#123;&#125;</span><br><span class="line">    <span class="comment"># '-createtime' 前面加-为倒序</span></span><br><span class="line">    userList = models.User.objects.all().order_by(<span class="string">'-createtime'</span>).values()</span><br><span class="line">    data[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">    <span class="comment"># 方式一</span></span><br><span class="line">    <span class="comment"># data['result'] = json.loads(serializers.serialize('json', userList))</span></span><br><span class="line">    <span class="comment"># 方式二</span></span><br><span class="line">    data[<span class="string">'result'</span>] = list(userList)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(data, safe=<span class="literal">False</span>, json_dumps_params=&#123;<span class="string">'ensure_ascii'</span>: <span class="literal">False</span>&#125;)</span><br></pre></td></tr></table></figure><p>项目路径找到models.py,修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">    age = models.IntegerField()</span><br><span class="line">    sex = models.IntegerField()</span><br><span class="line">    createtime = models.DateTimeField()</span><br><span class="line">    <span class="comment"># 指定数据库表名称</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span><span class="params">()</span>:</span></span><br><span class="line">        db_table = <span class="string">"tb_user"</span></span><br></pre></td></tr></table></figure><p>启动!!!  访问 <a href="http://127.0.0.1:8000/helloMysql/" target="_blank" rel="noopener">http://127.0.0.1:8000/helloMysql/</a><br>查看结果<br><img data-src="https://img-blog.csdnimg.cn/20200403210359645.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/03/MalhamStars_ZH-CN4163177154_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://gmaya.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gmaya.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python连接Mysql数据库Demo</title>
    <link href="https://gmaya.top/2020/20200403/"/>
    <id>https://gmaya.top/2020/20200403/</id>
    <published>2020-04-03T05:29:41.000Z</published>
    <updated>2020-04-03T06:50:02.716Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/03/PlaceofRainbows_ZH-CN7878813025_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个必须要了解一下,<br>老保存到本地根本不是办法<br>简单的查询,新增,先了解基本写法</p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>就算使用java也不会在代码创建数据库啥啥的,<br>所以这里都不去了解怎么在代码创建数据库,表之类的<br>直接手动去创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`tb_user`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_user`</span>  (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'主键'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'名字'</span>,</span><br><span class="line">  <span class="string">`age`</span> <span class="built_in">int</span>(<span class="number">3</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'年龄'</span>,</span><br><span class="line">  <span class="string">`sex`</span> <span class="built_in">int</span>(<span class="number">1</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'性别,0未知,1男,2女'</span>,</span><br><span class="line">  <span class="string">`createtime`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> AUTO_INCREMENT = <span class="number">6</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci <span class="keyword">COMMENT</span> = <span class="string">'用户测试表'</span> ROW_FORMAT = <span class="keyword">Compact</span>;</span><br></pre></td></tr></table></figure><p>简简单单搞点数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_user`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'张三'</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="string">'2020-04-03 11:03:03'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_user`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'李四'</span>, <span class="number">34</span>, <span class="number">0</span>, <span class="string">'2020-04-03 11:03:13'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_user`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">'王五'</span>, <span class="number">45</span>, <span class="number">2</span>, <span class="string">'2020-04-03 11:03:24'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_user`</span> <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">'小红'</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="string">'2020-04-03 13:39:44'</span>);</span><br></pre></td></tr></table></figure><h2 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># @Author: GMaya</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开数据库连接</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, port=<span class="number">3306</span>, user=<span class="string">'root'</span>, passwd=<span class="string">'root'</span>, db=<span class="string">'python'</span>, charset=<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seleteUser</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 使用cursor方法创建一个游标</span></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    sql = <span class="string">"select * from tb_user"</span></span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    data = cursor.fetchall()</span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">        id = d[<span class="number">0</span>]</span><br><span class="line">        name = d[<span class="number">1</span>]</span><br><span class="line">        age = d[<span class="number">2</span>]</span><br><span class="line">        sex = d[<span class="number">3</span>]</span><br><span class="line">        createtime = d[<span class="number">4</span>]</span><br><span class="line">        print(id, name, age, sex, createtime)</span><br><span class="line">    cursor.close()</span><br><span class="line">    db.close()</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertUser</span><span class="params">(name, age, sex, createTime)</span>:</span></span><br><span class="line">    <span class="comment"># 使用cursor方法创建一个游标</span></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    sql = <span class="string">"insert into tb_user(name,age,sex,createtime) values (%s,%s,%s,%s) "</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 执行sql语句;使用构造参数防止sql注入!</span></span><br><span class="line">        row = cursor.execute(sql, (name, age, sex, createTime))</span><br><span class="line">        print(<span class="string">"影响条数:%s"</span> % row)</span><br><span class="line">        <span class="comment"># 提交到数据库执行</span></span><br><span class="line">        db.commit()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment"># 发生错误时回滚</span></span><br><span class="line">        db.rollback()</span><br><span class="line">    <span class="comment"># 关闭</span></span><br><span class="line">    cursor.close()</span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 查询</span></span><br><span class="line">    <span class="comment"># data = seleteUser()</span></span><br><span class="line">    <span class="comment"># 新增</span></span><br><span class="line">    insertUser(<span class="string">'小红'</span>, <span class="number">12</span>, <span class="number">1</span>, datetime.datetime.now())</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="datetime-模块"><a href="#datetime-模块" class="headerlink" title="datetime 模块"></a>datetime 模块</h3><p><img data-src="https://img-blog.csdnimg.cn/20200403141633204.png" alt=""></p><p>获取当前时间年月日时分秒<br>now(…)：返回当前日期时间的datetime对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.datetime.now()</span><br></pre></td></tr></table></figure><h3 id="pymysql模块"><a href="#pymysql模块" class="headerlink" title="pymysql模块"></a>pymysql模块</h3><p>获取新增主键id</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor.lastrowid</span><br></pre></td></tr></table></figure><p>获取查询全部结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor.fetchall()</span><br></pre></td></tr></table></figure><p>获取查询结果第一条</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor.fetchone()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/03/PlaceofRainbows_ZH-CN7878813025_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://gmaya.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gmaya.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取全球疫情Demo</title>
    <link href="https://gmaya.top/2020/20200402-2/"/>
    <id>https://gmaya.top/2020/20200402-2/</id>
    <published>2020-04-02T14:09:11.000Z</published>
    <updated>2020-04-02T14:13:05.088Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/02/PascuaFlorida_ZH-CN7720904158_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>仅仅学习而已,不做其他非法操作.<br>习惯用小demo来熟练各种方法与技巧</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>进入腾讯新闻找到疫情入口<br><a href="https://news.qq.com/zt2020/page/feiyan.htm#/global" target="_blank" rel="noopener">https://news.qq.com/zt2020/page/feiyan.htm#/global</a><br>然后F12分析接口.<br>这对于java老鸟来说,分分钟找到.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.inews.qq.com/newsqa/v1/automation/foreign/country/ranklist</span><br></pre></td></tr></table></figure><p>然后分析json,取什么值, 用什么.</p><h2 id="撸代码"><a href="#撸代码" class="headerlink" title="撸代码"></a>撸代码</h2><h3 id="装工具"><a href="#装工具" class="headerlink" title="装工具"></a>装工具</h3><p>由于是从0开始学的python,所以什么也没有,<br>只有一个python环境,所以直接来到jb家<a href="https://www.jetbrains.com/" target="_blank" rel="noopener">jetbrains</a>,撸一个pycharm, 用过idea的都知道,直接和idea安装方式一样,一毛一样!!!</p><h3 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h3><p>进来不多说, 一个hello例子必须要有</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># @Author: GMaya</span></span><br><span class="line">print(<span class="string">'hello word!'</span>)</span><br></pre></td></tr></table></figure><p>右键执行<br><img data-src="https://img-blog.csdnimg.cn/20200402202028116.png" alt=""></p><h3 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h3><p>想要访问互联网, 你不得一个requests请求么?<br>刚好,导入这个<br>在python安装目录 –&gt; Scripts 包下,进入cmd<br>输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>等待安装完成!<br>然后在ide里面设置引入<br><img data-src="https://img-blog.csdnimg.cn/2020040220292135.png" alt=""></p><h3 id="访问接口"><a href="#访问接口" class="headerlink" title="访问接口"></a>访问接口</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># @Author: GMaya</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建会话对象</span></span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="comment"># 请求接口</span></span><br><span class="line">result = session.get(<span class="string">'https://api.inews.qq.com/newsqa/v1/automation/foreign/country/ranklist'</span>)</span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line">print(result.text)</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/2020040220394210.png" alt=""><br>握草,真是方便快捷狠啊</p><p>走一步学一部,看下这个requests包是啥</p><blockquote><p>Requests为Python处理了所有HTTP/1.1操作， 与Web服务的无缝集成。不需要为URL手动添加查询字符串或POST数据进行表单处理。基于urllib3, 能自动处理Keep-alive和HTTP连接池。</p></blockquote><p>此处 自行百度学习了小半个小时,以后用到复杂的再说.</p><h3 id="处理结果"><a href="#处理结果" class="headerlink" title="处理结果"></a>处理结果</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># @Author: GMaya</span></span><br><span class="line"><span class="keyword">import</span> requests, json, jsonpath</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建会话对象</span></span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="comment"># 请求接口</span></span><br><span class="line">result = session.get(<span class="string">'https://api.inews.qq.com/newsqa/v1/automation/foreign/country/ranklist'</span>)</span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line">print(result.text)</span><br><span class="line"><span class="comment"># 解析json结果</span></span><br><span class="line">resJson = json.loads(result.text)</span><br><span class="line">data = jsonpath.jsonpath(resJson, <span class="string">'$.data.*'</span>)</span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">    res = <span class="string">'日期:'</span> + d[<span class="string">'date'</span>] + <span class="string">'--'</span> + d[<span class="string">'continent'</span>] + <span class="string">'--'</span> + d[<span class="string">'name'</span>] + <span class="string">'--'</span> + <span class="string">'新增确诊:'</span> + str(</span><br><span class="line">        d[<span class="string">'confirmAdd'</span>]) + <span class="string">'累计确诊:'</span> + str(d[<span class="string">'confirm'</span>]) + <span class="string">'治愈:'</span> + str(d[<span class="string">'heal'</span>]) + <span class="string">'死亡:'</span> + str(d[<span class="string">'dead'</span>])</span><br><span class="line">    <span class="comment"># 保存数据到我的d盘</span></span><br><span class="line">    file = <span class="string">'D:\download\global-yq.txt'</span></span><br><span class="line">    <span class="keyword">with</span> open(file, <span class="string">'a+'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(res + <span class="string">'\n'</span>)  <span class="comment"># 加\n换行显示</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200402220637483.png" alt=""><br>结果已经保存到本地文本里面了.<br>有不懂的命令直接文档里面找,还是很容易的<br><a href="https://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="noopener">文档连接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/02/PascuaFlorida_ZH-CN7720904158_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://gmaya.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gmaya.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python你好!</title>
    <link href="https://gmaya.top/2020/20200402/"/>
    <id>https://gmaya.top/2020/20200402/</id>
    <published>2020-04-02T11:32:11.000Z</published>
    <updated>2020-04-02T14:08:49.179Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://s1.wailian.download/2020/04/02/ShyGuy_ZH-CN7391687938_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这年头,谁不是熟悉好几个语言!<br>HTML是不是语言!   超文本标记语言&lt;/邪笑&gt;</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>百度搜索Python进入官网<a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a><br><img data-src="https://img-blog.csdnimg.cn/20200402160640863.png" alt=""><br><img data-src="https://img-blog.csdnimg.cn/20200402160716709.png" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>双击打开安装包, 注意选择第二个,自定义安装, 谁吧我的软件安装到c盘,我跟谁急<br>下面还有一个add python 勾上! 这样就不需要配置环境变量了.<br>其他的都默认,go!<br>完成!</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>cmd进入,输入python<br><img data-src="https://img-blog.csdnimg.cn/2020040216125876.png" alt=""><br>输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello python!!"</span>)</span><br></pre></td></tr></table></figure><p>退出<br>按ctrl+z,回车</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://s1.wailian.download/2020/04/02/ShyGuy_ZH-CN7391687938_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://gmaya.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gmaya.top/tags/Python/"/>
    
  </entry>
  
</feed>
