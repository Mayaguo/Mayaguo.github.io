<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GMaya</title>
  
  <subtitle>生命不止，奋斗不息。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gmaya.top/"/>
  <updated>2020-05-14T05:44:05.331Z</updated>
  <id>https://gmaya.top/</id>
  
  <author>
    <name>GMaya</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Cloud Gateway网关整合</title>
    <link href="https://gmaya.top/2020/20200514/"/>
    <id>https://gmaya.top/2020/20200514/</id>
    <published>2020-05-14T05:38:11.000Z</published>
    <updated>2020-05-14T05:44:05.331Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/05/14/MooseWatching_ZH-CN9115714564_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>Spring Cloud Gateway为Spring生态系统上的一个API网关组件，主要提供一种简单而有效的方式路由映射到指定的API，并为他们提供安全性、监控和限流等等。</p></blockquote><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>创建一个gmaya-gateway 项目。</p><h3 id="修改pom文件"><a href="#修改pom文件" class="headerlink" title="修改pom文件"></a>修改pom文件</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--gateway网关,内置webflux 依赖--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--eureka客户端--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--hystrix容错降级--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--健康监控--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">     &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line"> &lt;/dependency&gt;</span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line"> &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="启动类修改"><a href="#启动类修改" class="headerlink" title="启动类修改"></a>启动类修改</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br></pre></td></tr></table></figure><h3 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9200</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gmaya-geteway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">locator:</span></span><br><span class="line">          <span class="comment"># 开启服务注册和发现</span></span><br><span class="line">          <span class="comment"># 如果为true，访问路径有两个：</span></span><br><span class="line">          <span class="comment"># 1.ip:9200/gmaya-service-admin/user/test</span></span><br><span class="line">          <span class="comment"># 2.ip:9200/admin/user/test  (这个是Path自己定义的/admin/**)</span></span><br><span class="line">          <span class="comment"># 如果为false，访问路径有一个ip:9200/admin/user/test</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">          <span class="comment"># 服务名配置为小写</span></span><br><span class="line">          <span class="attr">lower-case-service-id:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="comment"># 系统服务</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">gmaya-service-admin</span> <span class="comment"># 不重复即可</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://gmaya-service-admin</span> <span class="comment"># 需要转发到的服务名称</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="comment"># 以 /admin/开头的路径全部转发到lb://gmaya-service-admin的服务上，此时gmaya-service-admin可以负载均衡</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/admin/**</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="comment"># 去掉前面1个前缀,也就是真正转发访问的时候不带/admin/</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">StripPrefix=1</span></span><br><span class="line"><span class="comment"># 注册服务中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment"># 心跳时间，即服务续约间隔时间（缺省为30s）</span></span><br><span class="line">    <span class="attr">lease-renewal-interval-in-seconds:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment"># 发呆时间，即服务续约到期时间（缺省为90s）</span></span><br><span class="line">    <span class="attr">lease-expiration-duration-in-seconds:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8000/eureka/</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 开启健康检查</span></span><br><span class="line">    <span class="comment"># 表示eureka client间隔多久去拉取服务注册信息，默认为30秒</span></span><br><span class="line">    <span class="attr">registry-fetch-interval-seconds:</span> <span class="number">5</span></span><br><span class="line"><span class="comment"># 监控</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="comment"># 通过HTTP公开所有的端点， 默认是info,health</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">'*'</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">health:</span></span><br><span class="line">      <span class="comment"># 显示完整信息，#默认是never（简要信息）</span></span><br><span class="line">      <span class="attr">show-details:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><h2 id="简单测试"><a href="#简单测试" class="headerlink" title="简单测试"></a>简单测试</h2><p>注册中心：gmaya-service-center ：8000<br>系统服务：gmaya-service-admin ：9001<br>网关服务：gmaya-gateway  ：9200</p><p>启动三个项目，访问：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//localhost:9200/admin/user/test</span></span><br></pre></td></tr></table></figure><p>没问题！</p><p>测一下gateway  的负载均衡，现在再把系统服务启动一个9011端口。</p><p><img data-src="https://img-blog.csdnimg.cn/20200513152654508.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dserver.port=<span class="number">9011</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200513152827519.png" alt=""></p><p>启动之后查看效果<br><img data-src="https://img-blog.csdnimg.cn/20200513152930866.png" alt=""></p><p>此时已经有了一个服务名一样，但是端口不一样的两个服务了。<br>再次访问接口。<br>查看后端打印情况，确实是轮询方式实现了负载均衡。</p><h2 id="添加hystrix熔断降级"><a href="#添加hystrix熔断降级" class="headerlink" title="添加hystrix熔断降级"></a>添加hystrix熔断降级</h2><blockquote><p>在分布式系统中，网关作为流量的入口，因此会有大量的请求进入网关，向其他服务发起调用，其他服务不可避免的会出现调用失败（超时、异常），失败时不能让请求堆积在网关上，需要快速失败并返回给客户端，想要实现这个要求，就必须在网关上做熔断、降级操作。</p></blockquote><p><strong>有两种方式进行熔断、降级</strong></p><h3 id="webflux方式"><a href="#webflux方式" class="headerlink" title="webflux方式"></a>webflux方式</h3><h4 id="添加HystrixFallbackHandler"><a href="#添加HystrixFallbackHandler" class="headerlink" title="添加HystrixFallbackHandler"></a>添加HystrixFallbackHandler</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.gmaya.gmayagateway.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.BodyInserters;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.server.HandlerFunction;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.server.ServerRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.server.ServerResponse;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.cloud.gateway.support.ServerWebExchangeUtils.GATEWAY_ORIGINAL_REQUEST_URL_ATTR;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 熔断、降级类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/5/13 16:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HystrixFallbackHandler</span> <span class="keyword">implements</span> <span class="title">HandlerFunction</span>&lt;<span class="title">ServerResponse</span>&gt;</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;ServerResponse&gt; <span class="title">handle</span><span class="params">(ServerRequest serverRequest)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Optional&lt;Object&gt; originalUris = serverRequest.attribute(GATEWAY_ORIGINAL_REQUEST_URL_ATTR);</span><br><span class="line">        originalUris.ifPresent(originalUri -&gt; log.error(<span class="string">"网关执行请求:&#123;&#125;失败,hystrix服务降级处理"</span>, originalUri));</span><br><span class="line">        <span class="comment">// 可以根据自己的工具类返回统一格式</span></span><br><span class="line">        Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap();</span><br><span class="line">        map.put(<span class="string">"code"</span>,<span class="string">"500"</span>);</span><br><span class="line">        map.put(<span class="string">"msg"</span>,<span class="string">"服务出现异常，降级操作。"</span>);</span><br><span class="line">        <span class="keyword">return</span> ServerResponse.status(HttpStatus.INTERNAL_SERVER_ERROR.value()).contentType(MediaType.APPLICATION_JSON)</span><br><span class="line">                .body(BodyInserters.fromValue(JSON.toJSONString(map)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加GatewayRoutesConfig"><a href="#添加GatewayRoutesConfig" class="headerlink" title="添加GatewayRoutesConfig"></a>添加GatewayRoutesConfig</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.gmaya.gmayagateway.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.server.RequestPredicates;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.server.RouterFunction;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.server.RouterFunctions;</span><br><span class="line"><span class="keyword">import</span> top.gmaya.gmayagateway.handler.HystrixFallbackHandler;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由配置信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/5/13 16:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">// 全参构造方法</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayRoutesConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HystrixFallbackHandler hystrixFallbackHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RouterFunction&lt;?&gt; routerFunction()&#123;</span><br><span class="line">        <span class="keyword">return</span> RouterFunctions.route(RequestPredicates.path(<span class="string">"/defaultFallback"</span>).and(RequestPredicates.accept(</span><br><span class="line">                MediaType.TEXT_PLAIN)),hystrixFallbackHandler);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>大部分都省略了，和上面的一样。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="comment"># 系统服务</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">gmaya-service-admin</span> <span class="comment"># 不重复即可</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="comment"># 去掉前面1个前缀,也就是真正转发访问的时候不带/admin/</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">StripPrefix=1</span></span><br><span class="line">            <span class="comment"># 降级配置</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hystrix</span></span><br><span class="line">              <span class="attr">args:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">default</span></span><br><span class="line">                <span class="attr">fallbackUri:</span> <span class="string">'forward:/defaultFallback'</span></span><br><span class="line">                </span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">    <span class="attr">default:</span>  <span class="comment">#default全局有效</span></span><br><span class="line">      <span class="attr">execution:</span></span><br><span class="line">        <span class="attr">timeout:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">isolation:</span></span><br><span class="line">          <span class="attr">thread:</span></span><br><span class="line">            <span class="attr">timeoutInMilliseconds:</span> <span class="number">3000</span> <span class="comment">#断路器超时时间，默认1000ms</span></span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>系统服务接口中添加延迟，模拟超时<br><img data-src="https://img-blog.csdnimg.cn/20200513170042202.png" alt=""><br>此时访问，三秒后返回设置好的熔断信息</p><p>或者将系统服务直接关闭。</p><p><img data-src="https://img-blog.csdnimg.cn/20200513170223218.png" alt=""><br><img data-src="https://img-blog.csdnimg.cn/20200513170251624.png" alt=""></p><h3 id="web请求方式"><a href="#web请求方式" class="headerlink" title="web请求方式"></a>web请求方式</h3><p>这种方式和正常controller中方法一样</p><h4 id="新建DefaultFallbackController"><a href="#新建DefaultFallbackController" class="headerlink" title="新建DefaultFallbackController"></a>新建DefaultFallbackController</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.gmaya.gmayagateway.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * web方式进行熔断降级</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/5/13 17:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultFallbackController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"defaultFallback"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String,String&gt; <span class="title">defaultFallback</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 可以根据自己的工具类返回统一格式</span></span><br><span class="line">        Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap();</span><br><span class="line">        map.put(<span class="string">"code"</span>,<span class="string">"500"</span>);</span><br><span class="line">        map.put(<span class="string">"msg"</span>,<span class="string">"服务出现异常，降级操作。2"</span>);</span><br><span class="line">        log.error(<span class="string">"网关执行请求失败，web方式记录"</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将第一种方式配置先去掉，重启项目</p><h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><p>浏览器访问<br><img data-src="https://img-blog.csdnimg.cn/20200513171355278.png" alt=""><br><img data-src="https://img-blog.csdnimg.cn/20200513171414809.png" alt=""><br>注意： 如果两个都开启了， 就会默认使用第一种方式。</p><h2 id="添加限流"><a href="#添加限流" class="headerlink" title="添加限流"></a>添加限流</h2><blockquote><p>在高并发的系统中，往往需要在系统中做限流，一方面是为了防止大量的请求使服务器过载，导致服务不可用，另一方面是为了防止网络攻击。</p></blockquote><p>常见的限流纬度有比如通过Ip来限流、通过uri来限流、通过用户访问频次来限流。</p><p>采用springcloud gateway 为我们提供了限流过滤器RequestRateLimiterGatewayFilterFactory。使用Redis和lua脚本实现了令牌桶的方式限流。</p><p><img data-src="https://img-blog.csdnimg.cn/20200514094631899.png" alt=""></p><h3 id="修改pom"><a href="#修改pom" class="headerlink" title="修改pom"></a>修改pom</h3><p>引入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- redis配置 --&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;spring-boot-starter-data-redis-reactive&lt;/artifactId&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line">   &lt;!--使用redis的lettuce连接池使用到，如果不用可不加--&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="添加配置类"><a href="#添加配置类" class="headerlink" title="添加配置类"></a>添加配置类</h3><p>创建KeyResolverConfig类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.gmaya.gmayagateway.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.filter.ratelimit.KeyResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由限流配置</span></span><br><span class="line"><span class="comment"> * 配置文件中使用的那种限流 就是真正的限流方式，三种任选其一，不能同时存在</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/5/14 9:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyResolverConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ip限流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(value = <span class="string">"hostAddrKeyResolver"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> KeyResolver <span class="title">hostAddrKeyResolver</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> exchange -&gt; Mono.just(exchange.getRequest().getRemoteAddress().getAddress().getHostAddress());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据路径限流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="comment">/* @Bean(value = "uriKeyResolver")</span></span><br><span class="line"><span class="comment">    public KeyResolver uriKeyResolver()&#123;</span></span><br><span class="line"><span class="comment">        return exchange -&gt; Mono.just(exchange.getRequest().getURI().getPath());</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户限流，参数中必须有user字段</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/*@Bean(value = "userKeyResolver")</span></span><br><span class="line"><span class="comment">    public KeyResolver userKeyResolver()&#123;</span></span><br><span class="line"><span class="comment">        return exchange -&gt; Mono.just(exchange.getRequest().getQueryParams().getFirst("user"));</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="comment"># 系统服务</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">gmaya-service-admin</span> <span class="comment"># 不重复即可</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://gmaya-service-admin</span> <span class="comment"># 需要转发到的服务名称</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="comment"># 以 /admin/开头的路径全部转发到lb://gmaya-service-admin的服务上，此时gmaya-service-admin可以负载均衡</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/admin/**</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="comment"># 去掉前面1个前缀,也就是真正转发访问的时候不带/admin/</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">StripPrefix=1</span></span><br><span class="line">            <span class="comment"># 降级配置</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hystrix</span></span><br><span class="line">              <span class="attr">args:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">default</span></span><br><span class="line">                <span class="attr">fallbackUri:</span> <span class="string">'forward:/defaultFallback'</span></span><br><span class="line">            <span class="comment"># 限流配置</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">RequestRateLimiter</span></span><br><span class="line">              <span class="attr">args:</span></span><br><span class="line">                <span class="comment"># 用于限流的键的解析器的 Bean 对象的名字</span></span><br><span class="line">                <span class="attr">key-resolver:</span> <span class="string">'#&#123;@hostAddrKeyResolver&#125;'</span></span><br><span class="line">                <span class="comment"># 令牌桶每秒填充平均速率（实际情况适当加大即可：10）</span></span><br><span class="line">                <span class="attr">redis-rate-limiter.replenishRate:</span> <span class="number">1</span></span><br><span class="line">                <span class="comment"># 令牌桶总容量（实际情况适当加大即可：20）</span></span><br><span class="line">                <span class="attr">redis-rate-limiter.burstCapacity:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p>使用测试工具测试，每秒两次访问。<br><img data-src="https://img-blog.csdnimg.cn/20200514104558565.png" alt=""><br>查看redis中的值<br><img data-src="https://img-blog.csdnimg.cn/20200514093421968.png" alt=""><br>将令牌桶总容量中的3个值消耗完毕，再多次访问即页面就是一片空白。</p><p><img data-src="https://img-blog.csdnimg.cn/20200514095510740.png" alt=""><br>TODO ： 后续有时间，研究一下自定义限流返回信息。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/05/14/MooseWatching_ZH-CN9115714564_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringCloud" scheme="https://gmaya.top/categories/SpringCloud/"/>
    
    
      <category term="SpringBoot" scheme="https://gmaya.top/tags/SpringBoot/"/>
    
      <category term="Spring Cloud Gateway" scheme="https://gmaya.top/tags/Spring-Cloud-Gateway/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot Admin 监控</title>
    <link href="https://gmaya.top/2020/20200509/"/>
    <id>https://gmaya.top/2020/20200509/</id>
    <published>2020-05-09T07:03:11.000Z</published>
    <updated>2020-05-13T05:44:23.614Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/05/13/SeagullsChat_ZH-CN8973709588_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Spring Boot Admin 用于监控基于 Spring Boot 的应用，它是在 Spring Boot Actuator 的基础上提供简洁的可视化 WEB UI。Spring Boot Admin 提供了很多功能，如显示 name、id 和 version，显示在线状态，Loggers 的日志级别管理，Threads 线程管理，Environment 管理等。</p></blockquote><p>具体有什么好处，有什么作用，官网说的很清楚。<a href="https://github.com/codecentric/spring-boot-admin" target="_blank" rel="noopener">github地址</a></p><h2 id="spring-boot-amdin-的服务端"><a href="#spring-boot-amdin-的服务端" class="headerlink" title="spring boot amdin 的服务端"></a>spring boot amdin 的服务端</h2><p>新增项目gmaya-springbootadmin。作为spring boot amdin 的服务端</p><h3 id="pom文件"><a href="#pom文件" class="headerlink" title="pom文件"></a>pom文件</h3><p>新增pom文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">       <span class="string">&lt;groupId&gt;de.codecentric&lt;/groupId&gt;</span></span><br><span class="line">       <span class="string">&lt;artifactId&gt;spring-boot-admin-starter-server&lt;/artifactId&gt;</span></span><br><span class="line">       <span class="string">&lt;version&gt;2.2.2&lt;/version&gt;</span></span><br><span class="line">   <span class="string">&lt;/dependency&gt;</span></span><br><span class="line">   <span class="string">&lt;dependency&gt;</span></span><br><span class="line">       <span class="string">&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span></span><br><span class="line">       <span class="string">&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span></span><br><span class="line">   <span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure><h3 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">@SpringBootApplication</span></span><br><span class="line"><span class="string">@EnableDiscoveryClient</span></span><br><span class="line"><span class="string">@EnableAdminServer</span></span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>修改application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9100</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gmaya-springbootadmin</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8000/eureka/</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 开启健康检查</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="comment"># 通过HTTP公开所有的端点， 默认是info,health</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">'*'</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">health:</span></span><br><span class="line">      <span class="comment"># 显示完整信息，#默认是never（简要信息）</span></span><br><span class="line">      <span class="attr">show-details:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><p>因为是使用的Eureka注册中心，所以不需要单独客户端了， 直接在想要监控的客户端直接暴露端点即可。</p><h2 id="客户端修改"><a href="#客户端修改" class="headerlink" title="客户端修改"></a>客户端修改</h2><p>比如此时，我想要监控gmaya-wepapi-admin，gmaya-service-admin<br>只需要在这两个项目的配置类新增</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监控</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="comment"># 通过HTTP公开所有的端点， 默认是info,health</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">'*'</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">health:</span></span><br><span class="line">      <span class="comment"># 显示完整信息，#默认是never（简要信息）</span></span><br><span class="line">      <span class="attr">show-details:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><h2 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h2><p>启动注册中心，admin服务端，两个客户端。</p><p>注册中心页面<br><img data-src="https://img-blog.csdnimg.cn/20200509094113525.png" alt=""></p><p>spring boot admin 页面<br><img data-src="https://img-blog.csdnimg.cn/20200509094208467.png" alt=""><br>点进去，可以查看服务的详细信息</p><p><img data-src="https://img-blog.csdnimg.cn/20200509094258625.png" alt=""></p><h2 id="添加登录页面"><a href="#添加登录页面" class="headerlink" title="添加登录页面"></a>添加登录页面</h2><p>在spring boot amdin  服务端修改</p><p>可参考<a href="https://github.com/codecentric/spring-boot-admin/tree/master/spring-boot-admin-samples/spring-boot-admin-sample-eureka" target="_blank" rel="noopener">官方示例</a></p><p>pom新增</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gmaya-springbootadmin</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">"gmaya"</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">"gmaya"</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8000/eureka/</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 开启健康检查</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">metadata-map:</span></span><br><span class="line">      <span class="attr">user.name:</span> <span class="string">$&#123;spring.security.user.name&#125;</span></span><br><span class="line">      <span class="attr">user.password:</span> <span class="string">$&#123;spring.security.user.password&#125;</span></span><br></pre></td></tr></table></figure><p>新增配置类<br>SecuritySecureConfig，直接将官方给出的示例改造一下拿过来了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.gmaya.gmayaspringbootadmin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.Customizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.csrf.CookieCsrfTokenRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.util.matcher.AntPathRequestMatcher;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> de.codecentric.boot.admin.server.config.AdminServerProperties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * spring boot admin 官网示例 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/5/9 10:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecuritySecureConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String adminContextPath;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SecuritySecureConfig</span><span class="params">(AdminServerProperties adminServerProperties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.adminContextPath = adminServerProperties.getContextPath();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SavedRequestAwareAuthenticationSuccessHandler successHandler = <span class="keyword">new</span> SavedRequestAwareAuthenticationSuccessHandler();</span><br><span class="line">        successHandler.setTargetUrlParameter(<span class="string">"redirectTo"</span>);</span><br><span class="line">        successHandler.setDefaultTargetUrl(<span class="keyword">this</span>.adminContextPath + <span class="string">"/"</span>);</span><br><span class="line"></span><br><span class="line">        http.authorizeRequests((authorizeRequests) -&gt; authorizeRequests</span><br><span class="line">            .antMatchers(<span class="keyword">this</span>.adminContextPath + <span class="string">"/assets/**"</span>).permitAll()</span><br><span class="line">            .antMatchers(<span class="keyword">this</span>.adminContextPath + <span class="string">"/login"</span>).permitAll().anyRequest().authenticated())</span><br><span class="line">            .formLogin((formLogin) -&gt; formLogin.loginPage(<span class="keyword">this</span>.adminContextPath + <span class="string">"/login"</span>)</span><br><span class="line">                .successHandler(successHandler))</span><br><span class="line">            .logout((logout) -&gt; logout.logoutUrl(<span class="keyword">this</span>.adminContextPath + <span class="string">"/logout"</span>))</span><br><span class="line">            .httpBasic(Customizer.withDefaults())</span><br><span class="line">            .csrf((csrf) -&gt; csrf.csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse())</span><br><span class="line">                .ignoringRequestMatchers(</span><br><span class="line">                    <span class="keyword">new</span> AntPathRequestMatcher(<span class="keyword">this</span>.adminContextPath + <span class="string">"/instances"</span>,</span><br><span class="line">                        HttpMethod.POST.toString()),</span><br><span class="line">                    <span class="keyword">new</span> AntPathRequestMatcher(<span class="keyword">this</span>.adminContextPath + <span class="string">"/instances/*"</span>,</span><br><span class="line">                        HttpMethod.DELETE.toString()),</span><br><span class="line">                    <span class="keyword">new</span> AntPathRequestMatcher(<span class="keyword">this</span>.adminContextPath + <span class="string">"/actuator/**"</span>)));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启，查看效果</p><p><img data-src="https://img-blog.csdnimg.cn/20200509103652944.png" alt=""></p><h2 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h2><p>如果服务下线，会进行邮件通知<br>在spring boot amdin  服务端修改</p><p>pom新增</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--邮件通知--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>配置文件application.yml修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gmaya-springbootadmin</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">"gmaya"</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">"gmaya"</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="comment"># 发件人使用的qq邮箱服务</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">gmaya@qq.com</span></span><br><span class="line">    <span class="comment"># 授权码，不是密码，在qq邮箱设置-账号里面有生成授权码</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">ceevfekeeeeeeeee</span></span><br><span class="line">  <span class="attr">boot:</span></span><br><span class="line">    <span class="attr">admin:</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">        <span class="attr">mail:</span></span><br><span class="line">          <span class="comment"># 收件人，多个中间用,分隔</span></span><br><span class="line">          <span class="attr">to:</span> <span class="string">xxx@xxx.com</span></span><br><span class="line">          <span class="comment"># 发件人</span></span><br><span class="line">          <span class="attr">from:</span> <span class="string">gmaya@qq.com</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/2020050912443692.png" alt=""></p><p>重启服务，然后将一个客户端关闭<br><img data-src="https://img-blog.csdnimg.cn/2020050912433838.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/05/13/SeagullsChat_ZH-CN8973709588_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringCloud" scheme="https://gmaya.top/categories/SpringCloud/"/>
    
    
      <category term="SpringBoot" scheme="https://gmaya.top/tags/SpringBoot/"/>
    
      <category term="SpringBoot Admin" scheme="https://gmaya.top/tags/SpringBoot-Admin/"/>
    
  </entry>
  
  <entry>
    <title>有关Druid的一些配置</title>
    <link href="https://gmaya.top/2020/20200507/"/>
    <id>https://gmaya.top/2020/20200507/</id>
    <published>2020-05-07T06:07:14.000Z</published>
    <updated>2020-05-07T06:33:59.830Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/05/07/SiegeofCusco_ZH-CN9108219313_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Druid 是 Java 语言中最好的数据库连接池。 Druid 能够提供强大的监控和扩展功能。</p></blockquote><p>官方链接<a href="https://github.com/alibaba/druid" target="_blank" rel="noopener">https://github.com/alibaba/druid</a></p><p>以下所有配置基于springboot2.2.6配置</p><h2 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h2><p>maven项目直接引用</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--阿里数据库连接池 --&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;1.1.14&lt;/version&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="Druid的一些常用配置"><a href="#Druid的一些常用配置" class="headerlink" title="Druid的一些常用配置"></a>Druid的一些常用配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/gmaya?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="comment"># 初始化时建立物理连接的个数</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">5</span></span><br><span class="line">      <span class="comment"># 最大连接池数量，并不是连接池越大越好。</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">10</span></span><br><span class="line">      <span class="comment"># 最小连接池数量</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">5</span></span><br><span class="line">      <span class="comment"># 获取连接时最大等待时间，单位毫秒。</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="comment"># 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大.</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="comment"># 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能.官方写的默认true，但是看源码里面好像是默认false</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="comment"># 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="comment"># 合并多个DruidDataSource的监控数据</span></span><br><span class="line">      <span class="comment"># 设置为true会和time-between-log-stats-millis冲突，启动项目失败</span></span><br><span class="line">      <span class="attr">use-global-data-source-stat:</span> <span class="literal">false</span></span><br><span class="line">      <span class="comment"># 配置扩展插件</span></span><br><span class="line">      <span class="comment">#监控统计用的filter:stat</span></span><br><span class="line">      <span class="comment">#日志用的filter:log4j</span></span><br><span class="line">      <span class="comment">#防御sql注入的filter:wall</span></span><br><span class="line">      <span class="attr">filters:</span> <span class="string">stat,wall,slf4j</span></span><br><span class="line">      <span class="comment"># 用来检测连接是否有效的sql 必须是一个查询语句</span></span><br><span class="line">      <span class="comment"># mysql中为 select 'x'</span></span><br><span class="line">      <span class="comment"># oracle中为 select 1 from dual</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">select</span> <span class="string">'x'</span></span><br><span class="line">      <span class="comment"># 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span></span><br><span class="line">      <span class="attr">connect-properties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</span></span><br><span class="line">      <span class="comment"># 定时输出统计信息到日志中，并每次输出日志会导致清零（reset）连接池相关的计数器。</span></span><br><span class="line">      <span class="attr">time-between-log-stats-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="comment">#验证连接的有效性,建议配置为true，不影响性能，并且保证安全性。</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment">#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。</span></span><br><span class="line">      <span class="comment">#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="comment"># 连接保持空闲而不被驱逐的最小时间(连接池空闲连接的有效时间)</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="comment"># 浏览器监控页面</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="comment"># 是否启用监控页面，启用建议设置密码或白名单以保障安全</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url-pattern:</span> <span class="string">'/druid/*'</span></span><br><span class="line">        <span class="comment"># IP白名单(没有配置或者为空，则允许所有访问)</span></span><br><span class="line">        <span class="attr">allow:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">,192.168.0.1</span></span><br><span class="line">        <span class="comment"># IP黑名单 (存在共同时，deny优先于allow)</span></span><br><span class="line">        <span class="attr">deny:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">        <span class="attr">login-username:</span> <span class="string">gmaya</span></span><br><span class="line">        <span class="attr">login-password:</span> <span class="string">gmaya</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 配置DruidStatFilter</span></span><br><span class="line">      <span class="attr">web-stat-filter:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url-pattern:</span> <span class="string">'/*'</span></span><br><span class="line">        <span class="comment"># 排除一些不必要的url，比如.js,/css/等等</span></span><br><span class="line">        <span class="attr">exclusions:</span> <span class="string">'*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'</span></span><br></pre></td></tr></table></figure><p>注意：建议配置白名单，密码访问。<br><strong>test-on-borrow默认值问题：</strong><br>官方文档解释：<br><img data-src="https://img-blog.csdnimg.cn/20200507142829844.png" alt=""><br>然而自己查看实际效果却不一样，不知道是不是我的问题。<br>在源码中发现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataMap.put(<span class="string">"TestOnBorrow"</span>, <span class="keyword">this</span>.isTestOnBorrow()); </span><br><span class="line">dataMap.put(<span class="string">"TestOnReturn"</span>, <span class="keyword">this</span>.isTestOnReturn());</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.testOnBorrow = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">this</span>.testOnReturn = <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> DEFAULT_TEST_ON_BORROW = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> DEFAULT_TEST_ON_RETURN = <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><p>或者把这两个参数注释。启动查看页面<br><img data-src="https://img-blog.csdnimg.cn/20200507142735819.png" alt=""></p><h2 id="数据库密码加密"><a href="#数据库密码加密" class="headerlink" title="数据库密码加密"></a>数据库密码加密</h2><p>找到maven仓库中druid 的jar包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\maven-repository\com\alibaba\druid\<span class="number">1.1</span><span class="number">.14</span></span><br></pre></td></tr></table></figure><p>然后打开cmd输入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp druid-<span class="number">1.1</span><span class="number">.14</span>.jar com.alibaba.druid.filter.config.ConfigTools 你的密码</span><br></pre></td></tr></table></figure><p>然后得到</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">privateKey:MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAty+xzmC/<span class="number">4596</span>DAoD+OI0zThfJq6P5ZdcBx+iTrBisD9ViQSwOUktzYi1o4ZiJ+Akv2rR9Q47+CpEvjH123nvQIDAQABAkEAj+IycrujfRKCNnqXbCGg/<span class="number">6</span>BLfIKYG+mrKx05yzzYBz4e8R1/c1HCOn8D5YWDtKEXX5o1FKmJPHFyd0/OL8MhsQIhAP/P35Vitx7jN1B8gmgcmRhKYTgc6bVrkwNG8oLZaYr/AiEAt1IobJLPTOZffLkAY9K365IsK9Ky7a7uq4KniN8yOUMCIHWMbP41PVZ5LHrUrAvxUDxEOYZSauZNx2FTIa8U/pW7AiEArQv47MSIuuacLHfWTmSTCOQqnhN+o68FzRDAZQuLtVECIQCdBeUAddQSBtT7n32N36PWZS3oKnQ1sGVY2xCRC8o5Iw==</span><br><span class="line">publicKey:MFwwDQYJKoZIhvcNAQEBBQADS32sc5gv+OfegwKA/jiNM04Xyauj+WXXAcfok6wYrA/VYkEsDlJLc2ItaOGYifgJL9q0fUOO/gqRL4x0K1gJ70CAwEAAQ==</span><br><span class="line">password:FsnBV+<span class="number">3</span>RyPMUBHjG4unvXV21Z1tC+xi19Xy5f/JSm0ktb5m17+B5fOzyDNTcFACmhx3zg/lMaFOIy0UfOA==</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200507133602139.png" alt=""><br>然后更改配置<br>将明文密码替换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password: gMs08dqeyRQC3fsgEvb4pgmr2W/xVDgewGJLOJFZZOm8wfsVI0397uXGIe1W0rXJQl/meyB/GhqLt82fD8kiZw==</span><br></pre></td></tr></table></figure><p>新增密码解密，同时config.decrypt.key=上面生成的publicKey.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ConfigFilter,开启密码加密功能</span></span><br><span class="line"><span class="attr">filter:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 配置参数，让ConfigFilter解密密码</span></span><br><span class="line"><span class="attr">connection-properties:</span> <span class="string">config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAK23puqpHZjqJ7+DQkJBWKIYdc0nkSqZeLVrQtwMvRwXCRgtG5+/IKO8xhMTSGwhjglloiTiVnJ9IynvpyFVpgUCAwEAAQ==</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200507140225156.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/05/07/SiegeofCusco_ZH-CN9108219313_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://gmaya.top/categories/Java/"/>
    
    
      <category term="Druid" scheme="https://gmaya.top/tags/Druid/"/>
    
      <category term="SpringBoot" scheme="https://gmaya.top/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>给个人博客添加腾讯cos存储</title>
    <link href="https://gmaya.top/2020/20200426/"/>
    <id>https://gmaya.top/2020/20200426/</id>
    <published>2020-04-26T03:10:14.000Z</published>
    <updated>2020-04-26T03:13:03.275Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/26/FalklandRockhoppers_ZH-CN5370686595_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>图片，视频等一些静态资源放到自己网站会有一定的访问延迟。</p><h2 id="开通存储桶"><a href="#开通存储桶" class="headerlink" title="开通存储桶"></a>开通存储桶</h2><p>在控制台找到对象存储,选择和云服务器一个地方的对象存储。<br><img data-src="https://img-blog.csdnimg.cn/20200426103440374.png" alt=""><br>按照步骤一步一步创建即可。</p><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p>一般都是专门创建一个用户来操作的，当然至高无上的主账号也没啥毛病。<br>将新建的用户加上几个策略</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QcloudCOSGetServiceAccess 对象存储（COS）存储桶列表访问权限</span><br><span class="line">QcloudCOSFullAccess 对象存储（COS）全读写访问权限</span><br><span class="line">QcloudCOSDataFullControl 对象存储（COS）数据读、写、删除、列出的访问权限</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200426104928263.png" alt=""><br>然后在列表中权限管理设置上，    <strong>公有读私有写。数据读取、数据写入权限</strong>。<br><img data-src="https://img-blog.csdnimg.cn/20200426105025653.png" alt=""></p><h2 id="域名管理"><a href="#域名管理" class="headerlink" title="域名管理"></a>域名管理</h2><p>默认的链接一般都是<br><a href="https://blog-xxx.cos.ap-shanghai.myqcloud.com/imgs/MegellanicCloud_ZH-CN5132305226_1920x1080.jpg" target="_blank" rel="noopener">https://blog-xxx.cos.ap-shanghai.myqcloud.com/imgs/MegellanicCloud_ZH-CN5132305226_1920x1080.jpg</a><br>如果想要使用自己的子域名，比如：<br><a href="https://cos.gmaya.top/imgs/MegellanicCloud_ZH-CN5132305226_1920x1080.jpg" target="_blank" rel="noopener">https://cos.gmaya.top/imgs/MegellanicCloud_ZH-CN5132305226_1920x1080.jpg</a></p><ol><li>添加自定义域名</li><li>设置nginx的https代理</li></ol><p>首先在DNS 解析 中 解析一个 cos 指向自己服务器ip的子域名，然后去申请一个免费的证书。<br><img data-src="https://img-blog.csdnimg.cn/2020042611085940.png" alt=""></p><p>然后在域名管理里面添加自定义域名</p><p><img data-src="https://img-blog.csdnimg.cn/20200426105728973.png" alt=""><br>之后修改nginx配置。<br>因为我全站都是https的，不想因为几个图片没有https，导致全站又变成不安全的了。强迫症</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen       <span class="number">443</span> ssl;</span><br><span class="line">       server_name  cos.gmaya.top;</span><br><span class="line"></span><br><span class="line">ssl on;</span><br><span class="line">       ssl_certificate      1_cos.gmaya.top_bundle.crt; # 你的证书</span><br><span class="line">       ssl_certificate_key  <span class="number">2</span>_cos.gmaya.top.key;</span><br><span class="line">ssl_session_cache    shared:SSL:<span class="number">1</span>m;</span><br><span class="line">       ssl_session_timeout  <span class="number">5</span>m;</span><br><span class="line"></span><br><span class="line">       ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">       ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">access_log off; </span><br><span class="line">expires 30d; # 缓存30天，自己决定</span><br><span class="line"></span><br><span class="line">root /data/www/; # 必须</span><br><span class="line">proxy_pass  https:<span class="comment">//blog-xxx.cos.ap-shanghai.myqcloud.com; # 你的桶路径</span></span><br><span class="line">proxy_set_header Host $http_host;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">error_page  <span class="number">404</span>      /<span class="number">404</span>.html;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="防盗链设置"><a href="#防盗链设置" class="headerlink" title="防盗链设置"></a>防盗链设置</h2><p>如果不开启防盗链，那么哪个网站都可以引用你的图片。</p><p><img data-src="https://img-blog.csdnimg.cn/20200426110345344.png" alt=""></p><h2 id="客户端工具"><a href="#客户端工具" class="headerlink" title="客户端工具"></a>客户端工具</h2><p>在控制台直接进行下载<br><img data-src="https://img-blog.csdnimg.cn/2020042611062841.png" alt=""><br>在用户管理里面找到刚才新开的账户，然后根据API 密钥登录接口。以后上传图片就可以直接拖拽了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/26/FalklandRockhoppers_ZH-CN5370686595_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="cos" scheme="https://gmaya.top/categories/cos/"/>
    
    
      <category term="cos" scheme="https://gmaya.top/tags/cos/"/>
    
      <category term="存储" scheme="https://gmaya.top/tags/%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>添加feign熔断降级之后启动报错</title>
    <link href="https://gmaya.top/2020/20200425/"/>
    <id>https://gmaya.top/2020/20200425/</id>
    <published>2020-04-25T08:16:14.000Z</published>
    <updated>2020-04-26T03:22:39.564Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/26/MegellanicCloud_ZH-CN5132305226_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在springcloud中，我使用feign自带的Hystrix实现熔断降级，但是却报错了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">Error starting ApplicationContext. To display the conditions report re-run your application with <span class="string">'debug'</span> enabled.</span><br><span class="line">[<span class="number">2020</span>-<span class="number">04</span>-<span class="number">25</span> <span class="number">15</span>:<span class="number">49</span>:<span class="number">59</span> ERROR main] org.springframework.boot.SpringApplication - Application run failed</span><br><span class="line">org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name <span class="string">'userController'</span>: Unsatisfied dependency expressed through field <span class="string">'userFacade'</span>; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name <span class="string">'gmaya.service.admin.api.facade.UserFacade'</span>: FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type <span class="class"><span class="keyword">class</span> <span class="title">gmaya</span>.<span class="title">service</span>.<span class="title">admin</span>.<span class="title">api</span>.<span class="title">facade</span>.<span class="title">factory</span>.<span class="title">UserFallbackFactory</span> <span class="title">found</span> <span class="title">for</span> <span class="title">feign</span> <span class="title">client</span> <span class="title">gmaya</span>-<span class="title">service</span>-<span class="title">admin</span></span></span><br><span class="line">at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:<span class="number">130</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:<span class="number">399</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:<span class="number">1422</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:<span class="number">594</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:<span class="number">517</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$<span class="number">0</span>(AbstractBeanFactory.java:<span class="number">323</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:<span class="number">222</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:<span class="number">321</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:<span class="number">202</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:<span class="number">882</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:<span class="number">878</span>) ~[spring-context-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:<span class="number">550</span>) ~[spring-context-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:<span class="number">141</span>) ~[spring-boot-<span class="number">2.2</span><span class="number">.6</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.6</span>.RELEASE]</span><br><span class="line">at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:<span class="number">747</span>) [spring-boot-<span class="number">2.2</span><span class="number">.6</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.6</span>.RELEASE]</span><br><span class="line">at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:<span class="number">397</span>) [spring-boot-<span class="number">2.2</span><span class="number">.6</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.6</span>.RELEASE]</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class="number">315</span>) [spring-boot-<span class="number">2.2</span><span class="number">.6</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.6</span>.RELEASE]</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class="number">1226</span>) [spring-boot-<span class="number">2.2</span><span class="number">.6</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.6</span>.RELEASE]</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class="number">1215</span>) [spring-boot-<span class="number">2.2</span><span class="number">.6</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.6</span>.RELEASE]</span><br><span class="line">at top.gmaya.gmayawepapiadmin.GmayaWepapiAdminApplication.main(GmayaWepapiAdminApplication.java:<span class="number">15</span>) [classes/:na]</span><br><span class="line">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name <span class="string">'gmaya.service.admin.api.facade.UserFacade'</span>: FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type <span class="class"><span class="keyword">class</span> <span class="title">gmaya</span>.<span class="title">service</span>.<span class="title">admin</span>.<span class="title">api</span>.<span class="title">facade</span>.<span class="title">factory</span>.<span class="title">UserFallbackFactory</span> <span class="title">found</span> <span class="title">for</span> <span class="title">feign</span> <span class="title">client</span> <span class="title">gmaya</span>-<span class="title">service</span>-<span class="title">admin</span></span></span><br><span class="line">at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:178) ~[spring-beans-5.2.5.RELEASE.jar:5.2.5.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:<span class="number">101</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:<span class="number">1818</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:<span class="number">1266</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:<span class="number">260</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:<span class="number">202</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:<span class="number">276</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:<span class="number">1515</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:<span class="number">1472</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:<span class="number">1253</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:<span class="number">1210</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:<span class="number">640</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">... <span class="number">19</span> common frames omitted</span><br><span class="line">Caused by: java.lang.IllegalStateException: No fallbackFactory instance of type <span class="class"><span class="keyword">class</span> <span class="title">gmaya</span>.<span class="title">service</span>.<span class="title">admin</span>.<span class="title">api</span>.<span class="title">facade</span>.<span class="title">factory</span>.<span class="title">UserFallbackFactory</span> <span class="title">found</span> <span class="title">for</span> <span class="title">feign</span> <span class="title">client</span> <span class="title">gmaya</span>-<span class="title">service</span>-<span class="title">admin</span></span></span><br><span class="line">at org.springframework.cloud.openfeign.HystrixTargeter.getFromContext(HystrixTargeter.java:81) ~[spring-cloud-openfeign-core-2.2.2.RELEASE.jar:2.2.2.RELEASE]</span><br><span class="line">at org.springframework.cloud.openfeign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:<span class="number">63</span>) ~[spring-cloud-openfeign-core-<span class="number">2.2</span><span class="number">.2</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.2</span>.RELEASE]</span><br><span class="line">at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:<span class="number">53</span>) ~[spring-cloud-openfeign-core-<span class="number">2.2</span><span class="number">.2</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.2</span>.RELEASE]</span><br><span class="line">at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:<span class="number">253</span>) ~[spring-cloud-openfeign-core-<span class="number">2.2</span><span class="number">.2</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.2</span>.RELEASE]</span><br><span class="line">at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:<span class="number">282</span>) ~[spring-cloud-openfeign-core-<span class="number">2.2</span><span class="number">.2</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.2</span>.RELEASE]</span><br><span class="line">at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:<span class="number">262</span>) ~[spring-cloud-openfeign-core-<span class="number">2.2</span><span class="number">.2</span>.RELEASE.jar:<span class="number">2.2</span><span class="number">.2</span>.RELEASE]</span><br><span class="line">at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:<span class="number">171</span>) ~[spring-beans-<span class="number">5.2</span><span class="number">.5</span>.RELEASE.jar:<span class="number">5.2</span><span class="number">.5</span>.RELEASE]</span><br><span class="line">... <span class="number">30</span> common frames omitted</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">1</span></span><br></pre></td></tr></table></figure><p>首先先去看了几个点：</p><ol><li>降级实现类是否加注解@Component<br><img data-src="https://img-blog.csdnimg.cn/2020042515525663.png" alt=""></li><li>是否开启了Hystrix熔断支持</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">feign:</span><br><span class="line">  hystrix:</span><br><span class="line">    enabled: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>发现都没问题。</p><p>反正是知道加上UserFallbackFactory才报错的，之前没加就没报错。</p><p>觉得是spring注入不了这个bean。然后突然想起来，之前说项目的所有包都要在springboot启动类下面或者同级。</p><p>然后我就去看了一下我的项目结构<br><img data-src="https://img-blog.csdnimg.cn/20200425155843672.png" alt=""><br>这包名不一样啊，那么我启动web项目能发现在api项目中注册的bean？<br><img data-src="https://img-blog.csdnimg.cn/2020042516022796.png" alt=""><br>注解 springbootapplication源码中解释： 自动扫描所在包及其子包，会将有注解的加入到spring容器中。</p><p>然后就在web暴露接口项目的启动类中添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span>(scanBasePackages = &#123; <span class="string">"top.gmaya.gmayawepapiadmin"</span>, <span class="string">"gmaya.service.admin.api"</span>&#125;)</span><br></pre></td></tr></table></figure><p>第一个扫描自己的包，第二个扫描feign接口包</p><p>然后就启动成功了，奇怪之前不加为什么可以呢。<br>然后看了一下，之前是@EnableFeignClients已经将接口扫描注册了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableFeignClients</span>(basePackages = &#123;<span class="string">"gmaya.service.admin.api.facade"</span>&#125;)</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>启动，访问，没问题。<br>关闭impl实现项目，访问，出现熔断，降级。</p><p>顺便测测负载均衡，默认是开启的。<br>刚才启动的impl实现项目端口是9001，然后使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Dserver.port=<span class="number">9003</span> -jar gmaya-service-admin-impl-<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT.jar  server.port=<span class="number">9003</span></span><br></pre></td></tr></table></figure><p>再次启动一个9003端口的项目。<br><img data-src="https://img-blog.csdnimg.cn/20200425160724961.png" alt=""><br>这个时候再次访问接口，发现这两个impl实现项目交替打印。因为默认负载均衡方式是轮询。<br><img data-src="https://img-blog.csdnimg.cn/20200425161033468.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/26/MegellanicCloud_ZH-CN5132305226_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringCloud" scheme="https://gmaya.top/categories/SpringCloud/"/>
    
    
      <category term="问题" scheme="https://gmaya.top/tags/%E9%97%AE%E9%A2%98/"/>
    
      <category term="熔断" scheme="https://gmaya.top/tags/%E7%86%94%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>撞库、脱库和洗库</title>
    <link href="https://gmaya.top/2020/20200424/"/>
    <id>https://gmaya.top/2020/20200424/</id>
    <published>2020-04-24T02:55:14.000Z</published>
    <updated>2020-04-24T02:57:58.081Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/24/KingEider_ZH-CN3559595357_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="撞库"><a href="#撞库" class="headerlink" title="撞库"></a>撞库</h2><p>“撞库”一般就是指黑客拿到已经泄露的用户信息，然后去各个网站进行登录，一旦你的账号密码在各个网站都一样，那么就相当于撞库成功。<br>建议：各个网站的登录账号和密码不要一样。</p><h2 id="脱库"><a href="#脱库" class="headerlink" title="脱库"></a>脱库</h2><p>“拖库”就是黑客通过技术手段，盗取数据库信息的过程。<br>建议：做防sql注入，文件上传漏洞等。</p><h2 id="洗库"><a href="#洗库" class="headerlink" title="洗库"></a>洗库</h2><p>“洗库”就是将得到的数据信息进行贩卖。变现。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/24/KingEider_ZH-CN3559595357_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="自我抒写" scheme="https://gmaya.top/categories/%E8%87%AA%E6%88%91%E6%8A%92%E5%86%99/"/>
    
    
      <category term="随笔" scheme="https://gmaya.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>泰山版《Java开发手册》</title>
    <link href="https://gmaya.top/2020/20200422/"/>
    <id>https://gmaya.top/2020/20200422/</id>
    <published>2020-04-22T05:49:14.000Z</published>
    <updated>2020-04-22T07:27:38.865Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/22/GPS_ZH-CN5160095061_1920x1080.jpg" alt=""></p><a id="more"></a><p>每次阿里推出最新的开发手册，自己都会去喵一眼，看一下。养成好习惯<br>泰山版：<br>新增5条日期时间规约；新增2条表别名sql规约；新增统一错误码规约。</p><p>官网地址：<a href="https://developer.aliyun.com/topic/java2020" target="_blank" rel="noopener">https://developer.aliyun.com/topic/java2020</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/22/GPS_ZH-CN5160095061_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://gmaya.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="https://gmaya.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>分布式雪花算法工具类</title>
    <link href="https://gmaya.top/2020/20200421/"/>
    <id>https://gmaya.top/2020/20200421/</id>
    <published>2020-04-21T03:30:14.000Z</published>
    <updated>2020-04-21T03:33:32.772Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/21/BluebellWood_ZH-CN8128422960_1920x1080.jpg" alt=""></p><a id="more"></a><blockquote><p>SnowFlake 算法，是 Twitter 开源的分布式 id 生成算法。</p></blockquote><p>SnowFlake算法的优点：</p><ul><li>高性能高可用：生成时不依赖于数据库，完全在内存中生成。</li><li>容量大：每秒中能生成数百万的自增ID。</li><li>ID自增：存入数据库中，索引效率高。</li></ul><p>SnowFlake算法的缺点：<br>依赖与系统时间的一致性，如果系统时间被回调，或者改变，可能会造成id冲突或者重复。</p><p>SnowFlakeUtil工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.gmaya.springbootrabbitmq.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 雪花算法 分布式 id生成工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/21 9:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SnowFlakeUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 时间起始标记点，作为基准，一般取系统的最近时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> epoch = <span class="number">1587433423721L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 机器标识位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> workerIdBits = <span class="number">10L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 机器ID最大值: 1023</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> maxWorkerId = -<span class="number">1L</span> ^ -<span class="number">1L</span> &lt;&lt; <span class="keyword">this</span>.workerIdBits;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 0，并发控制</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sequence = <span class="number">0L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 毫秒内自增位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> sequenceBits = <span class="number">12L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 12</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> workerIdShift = <span class="keyword">this</span>.sequenceBits;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 22</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> timestampLeftShift = <span class="keyword">this</span>.sequenceBits + <span class="keyword">this</span>.workerIdBits;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 4095,111111111111,12位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> sequenceMask = -<span class="number">1L</span> ^ -<span class="number">1L</span> &lt;&lt; <span class="keyword">this</span>.sequenceBits;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 记录产生时间毫秒数，判断是否是同1毫秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> lastTimestamp = -<span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入机器id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SnowFlakeUtil</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (id &gt; <span class="keyword">this</span>.maxWorkerId || id &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(String.format(<span class="string">"机器id不能大于%d或小于0"</span>, <span class="keyword">this</span>.maxWorkerId));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">long</span> <span class="title">nextId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取当前时间毫秒数</span></span><br><span class="line">        <span class="keyword">long</span> timestamp = timeGen();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.lastTimestamp == timestamp) &#123;</span><br><span class="line">            <span class="comment">//如果上一个timestamp与新产生的相等，则sequence加一(最大4095)</span></span><br><span class="line">            <span class="keyword">this</span>.sequence = <span class="keyword">this</span>.sequence + <span class="number">1</span> &amp; <span class="keyword">this</span>.sequenceMask;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.sequence == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 超过最大值进行按位与，结果为0，也就是当这一毫秒序号超过最大值，就会循环等待下一毫秒</span></span><br><span class="line">                timestamp = <span class="keyword">this</span>.tilNextMillis(<span class="keyword">this</span>.lastTimestamp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.sequence = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果时间回退，则报错或者返回-1，调用端进行判断</span></span><br><span class="line">        <span class="keyword">if</span> (timestamp &lt; <span class="keyword">this</span>.lastTimestamp) &#123;</span><br><span class="line">            log.error(String.format(<span class="string">"时钟回退，拒绝 %d 毫秒内生成雪花id"</span>, (<span class="keyword">this</span>.lastTimestamp - timestamp)));</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.lastTimestamp = timestamp;</span><br><span class="line">        <span class="comment">// 当前时间-初始时间，然后左移timestampLeftShift。</span></span><br><span class="line">        <span class="comment">// 将机器id左移workerIdShift</span></span><br><span class="line">        <span class="comment">// | 是按位或运算符，例如：x | y，只有当x，y都为0的时候结果才为0，其它情况结果都为1。</span></span><br><span class="line">        <span class="keyword">return</span> timestamp - <span class="keyword">this</span>.epoch &lt;&lt; <span class="keyword">this</span>.timestampLeftShift | <span class="keyword">this</span>.id &lt;&lt; <span class="keyword">this</span>.workerIdShift | <span class="keyword">this</span>.sequence;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果说几十年后id重复了，把机器id加1，再用几十年</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SnowFlakeUtil flowIdWorker = <span class="keyword">new</span> SnowFlakeUtil(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getSnowFlakeId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> flowIdWorker.nextId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 等待下一个毫秒的到来, 保证返回的毫秒数在参数lastTimestamp之后</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">tilNextMillis</span><span class="params">(<span class="keyword">long</span> lastTimestamp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> timestamp = timeGen();</span><br><span class="line">        <span class="keyword">while</span> (timestamp &lt;= lastTimestamp) &#123;</span><br><span class="line">            timestamp = timeGen();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得系统当前毫秒数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">timeGen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> System.currentTimeMillis();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断生成的记录是否有重复记录</span></span><br><span class="line">        <span class="keyword">final</span> Map&lt;Long, Integer&gt; map = <span class="keyword">new</span> ConcurrentHashMap();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> s = <span class="number">0</span>; s &lt; <span class="number">2000</span>; s++) &#123;</span><br><span class="line">                    <span class="keyword">long</span> snowFlakeId = SnowFlakeUtil.getSnowFlakeId();</span><br><span class="line">                    log.info(<span class="string">"生成雪花ID=&#123;&#125;"</span>,snowFlakeId);</span><br><span class="line">                    Integer put = map.put(snowFlakeId, <span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">if</span> (put != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"主键重复"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/21/BluebellWood_ZH-CN8128422960_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://gmaya.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="https://gmaya.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="雪花算法" scheme="https://gmaya.top/tags/%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot+RabbitMQ削峰入门</title>
    <link href="https://gmaya.top/2020/20200420/"/>
    <id>https://gmaya.top/2020/20200420/</id>
    <published>2020-04-20T10:06:14.000Z</published>
    <updated>2020-04-20T10:10:44.720Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/20/NeistPoint_ZH-CN3115403132_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>当大量的客户访问请求打到后端，去访问数据库等，瞬间会爆炸的。<br>经过前端或者其他的方案进行限流外。<br>还是有大量的请求，这个时候需要削峰了。</p><h2 id="简单的削峰例子"><a href="#简单的削峰例子" class="headerlink" title="简单的削峰例子"></a>简单的削峰例子</h2><p>先设置小一点，然后循环往队列里面放消息，消费的时候延迟2秒</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  rabbitmq:</span><br><span class="line">    host: <span class="number">192.168</span><span class="number">.21</span><span class="number">.129</span></span><br><span class="line">    port: <span class="number">5672</span></span><br><span class="line">    username: guest</span><br><span class="line">    password: guest</span><br><span class="line">    virtual-host: <span class="regexp">/</span></span><br><span class="line"><span class="regexp">    listener:</span></span><br><span class="line"><span class="regexp">      type: simple</span></span><br><span class="line"><span class="regexp">      simple:</span></span><br><span class="line"><span class="regexp">        prefetch: 1 # 消费者每次从队列获取的消息数量</span></span><br><span class="line"><span class="regexp">        concurrency: 1 # 消费者数量</span></span><br><span class="line"><span class="regexp">        max-concurrency: 1 # 启动消费者最大数量</span></span><br></pre></td></tr></table></figure><p>调用生产者</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (int i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">    <span class="comment">// 调用消息生产者</span></span><br><span class="line">    sender.sender(msg+i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@RabbitListener(queues = MQConfig.QUEUE)</span><br><span class="line">   public <span class="keyword">void</span> receiver(<span class="built_in">String</span> msg) throws InterruptedException &#123;</span><br><span class="line">       Thread.sleep(<span class="number">2000</span>L); <span class="comment">// 模拟处理需要2秒</span></span><br><span class="line">       log.info(<span class="string">"消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>页面访问：</p><p><a href="http://localhost:8088/hello?msg=GMaya" target="_blank" rel="noopener">http://localhost:8088/hello?msg=GMaya</a></p><p>此时消息会全部放到列队，但是会一条一条消费。简单的实现了削峰处理</p><p><img data-src="https://img-blog.csdnimg.cn/20200420163647431.png" alt=""><br>调整消费者的数量</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">prefetch: 1 # 消费者每次从队列获取的消息数量</span><br><span class="line">concurrency: 2 # 消费者数量</span><br><span class="line">max-concurrency: 10 # 启动消费者最大数量</span><br></pre></td></tr></table></figure><p>此时就会有两个消费者同时去消费队列中的消息。所以这个消费者数量需要根据实际的情况去设置所能承受的一个值，也就是峰值。</p><p><img data-src="https://img-blog.csdnimg.cn/20200420164005437.png" alt=""></p><h2 id="重试策略"><a href="#重试策略" class="headerlink" title="重试策略"></a>重试策略</h2><p>如果说消费者在消费的过程中失败了，那么会一直消费，一直到成功为止。</p><p>但是也可以添加重试策略，比如失败三次就不在消费了。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">listener:</span><br><span class="line">  type: simple</span><br><span class="line">  simple:</span><br><span class="line">    prefetch: 1 # 消费者每次从队列获取的消息数量</span><br><span class="line">    concurrency: 2 # 消费者数量</span><br><span class="line">    max-concurrency: 10 # 启动消费者最大数量</span><br><span class="line">    # 重试策略相关配置</span><br><span class="line">    retry:</span><br><span class="line">      enabled: true #开启消费者重试</span><br><span class="line">      max-attempts: 2 #最大重试次数</span><br><span class="line">      initial-interval: 2000 #重试间隔时间</span><br></pre></td></tr></table></figure><p>模拟异常</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@RabbitListener(queues = MQConfig.QUEUE)</span><br><span class="line">   public <span class="keyword">void</span> receiver(<span class="built_in">String</span> msg) throws InterruptedException &#123;</span><br><span class="line">       Thread.sleep(<span class="number">2000</span>L); <span class="comment">// 模拟处理需要2秒</span></span><br><span class="line">       <span class="keyword">if</span>(<span class="string">"GMaya8"</span>.equals(msg))&#123;</span><br><span class="line">           System.out.println(<span class="number">1</span>/<span class="number">0</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       log.info(<span class="string">"消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>此时的结果就是其他的消息被消费，但是这个GMaya8没了，失败三次之后就没了。队列中也消失了。</p><h2 id="如何保证rabbitmq消息不丢失"><a href="#如何保证rabbitmq消息不丢失" class="headerlink" title="如何保证rabbitmq消息不丢失"></a>如何保证rabbitmq消息不丢失</h2><p>丢失数据场景：</p><ol><li>生产者没有生产成功，即生产者丢失</li><li>rabbitmq丢失了</li><li>消费端丢失，即消费端没消费成功。</li></ol><p>开启confirm回调，启动手动确定消息消费。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: <span class="number">8088</span></span><br><span class="line">spring:</span><br><span class="line">  rabbitmq:</span><br><span class="line">    host: <span class="number">192.168</span><span class="number">.21</span><span class="number">.129</span></span><br><span class="line">    port: <span class="number">5672</span></span><br><span class="line">    username: guest</span><br><span class="line">    password: guest</span><br><span class="line">    virtual-host: /</span><br><span class="line">    publisher-returns: true # 实现ReturnCallback接口，如果消息从交换器发送到对应队列失败时触发</span><br><span class="line">    publisher-confirm-type: correlated</span><br><span class="line">    listener:</span><br><span class="line">      type: simple</span><br><span class="line">      simple:</span><br><span class="line">        acknowledge-mode: manual # 消息消费确认，可以手动确认</span><br><span class="line">        prefetch: 1 # 消费者每次从队列获取的消息数量</span><br><span class="line">        concurrency: 2 # 消费者数量</span><br><span class="line">        max-concurrency: 10 # 启动消费者最大数量</span><br><span class="line">        # 重试策略相关配置</span><br><span class="line">        retry:</span><br><span class="line">          enabled: true #开启消费者重试</span><br><span class="line">          max-attempts: 3 #最大重试次数</span><br><span class="line">          initial-interval: 2000 #重试间隔时间</span><br><span class="line">    template:</span><br><span class="line">      #在消息没有被路由到合适队列情况下会将消息返还给消息发布者</span><br><span class="line">      #当mandatory标志位设置为true时，如果exchange根据自身类型和消息routingKey无法找到一个合适的queue存储消息，</span><br><span class="line">      # 那么broker会调用basic.return方法将消息返还给生产者;当mandatory设置为false时，</span><br><span class="line">      # 出现上述情况broker会直接将消息丢弃;通俗的讲，mandatory标志告诉broker代理服务器至少将消息route到一个队列中，</span><br><span class="line">      # 否则就将消息return给发送者;</span><br><span class="line">      #: true # 启用强制信息</span><br><span class="line">      mandatory: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>使用交换机模式<br>生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sender</span> <span class="keyword">implements</span> <span class="title">RabbitTemplate</span>.<span class="title">ConfirmCallback</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RabbitTemplate rabbitTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Sender</span><span class="params">(RabbitTemplate rabbitTemplate)</span></span>&#123;</span><br><span class="line">        rabbitTemplate.setConfirmCallback(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * fanout 模式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fanoutSender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"fanout生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 会把消息发送给 所有绑定到此交换机的全部列队；routing_key会被忽略。</span></span><br><span class="line">        CorrelationData correlationData = <span class="keyword">new</span> CorrelationData(UUID.randomUUID().toString());</span><br><span class="line">        <span class="keyword">this</span>.rabbitTemplate.convertAndSend(MQConfig.FANOUT_EXCHANGE, <span class="string">""</span>, msg, correlationData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">confirm</span><span class="params">(CorrelationData correlationData, <span class="keyword">boolean</span> b, String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(b)&#123;</span><br><span class="line">            log.info(<span class="string">"消息生产成功"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            log.info(<span class="string">"消息生产失败"</span>);</span><br><span class="line">            <span class="comment">// 可以自己写重新发送消息</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE_A)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiverA</span><span class="params">(String msg,Message message, Channel channel)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    log.info(<span class="string">"QUEUE_A消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    channel.basicAck(message.getMessageProperties().getDeliveryTag(),<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE_B)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiverB</span><span class="params">(String msg,Message message, Channel channel)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    log.info(<span class="string">"QUEUE_B消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    channel.basicAck(message.getMessageProperties().getDeliveryTag(),<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个时候已经解决出现问题，倒是消息消失的情况。当处理好问题之后，重启就会重新消费</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/20/NeistPoint_ZH-CN3115403132_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="RabbitMQ" scheme="https://gmaya.top/categories/RabbitMQ/"/>
    
    
      <category term="RabbitMQ" scheme="https://gmaya.top/tags/RabbitMQ/"/>
    
      <category term="削峰" scheme="https://gmaya.top/tags/%E5%89%8A%E5%B3%B0/"/>
    
  </entry>
  
  <entry>
    <title>给hexo博客加404公益页面</title>
    <link href="https://gmaya.top/2020/20200419/"/>
    <id>https://gmaya.top/2020/20200419/</id>
    <published>2020-04-19T10:24:14.000Z</published>
    <updated>2020-04-19T10:25:25.671Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/19/VernalFalls_ZH-CN2664125316_1920x1080.jpg" alt=""></p><a id="more"></a><p>腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业！<br>效果如：<br><a href="https://gmaya.top/404.html">https://gmaya.top/404.html</a></p><p>目的：<br>如果访问网站不存在的页面，则返回腾讯公益404页面</p><p>使用方法，新建 404.html 页面，放到主题的 source 目录下，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"robots"</span> content=<span class="string">"all"</span> /&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"robots"</span> content=<span class="string">"index,follow"</span>/&gt;</span><br><span class="line">  &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"https://qzone.qq.com/gy/404/style/404style.css"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script type="text/</span>plain<span class="string">" src="</span>https:<span class="comment">//www.qq.com/404/search_children.js"</span></span><br><span class="line">          charset=<span class="string">"utf-8"</span> homePageUrl=<span class="string">"/"</span></span><br><span class="line">          homePageName=<span class="string">"回到我的主页"</span>&gt;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script src="https:/</span><span class="regexp">/qzone.qq.com/gy</span><span class="regexp">/404/</span>data.js<span class="string">" charset="</span>utf<span class="number">-8</span><span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script src="</span>https:<span class="comment">//qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;</span></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>修改nginx配置，只要访问的页面不存在则跳转到404公益页面。</p><p>在nginx.conf的443端口下添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error_page  <span class="number">404</span>      /<span class="number">404.</span>html;</span><br></pre></td></tr></table></figure><p>重启即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/19/VernalFalls_ZH-CN2664125316_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="优化" scheme="https://gmaya.top/categories/%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="优化" scheme="https://gmaya.top/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
