<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GMaya</title>
  
  <subtitle>生命不止，奋斗不息。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gmaya.top/"/>
  <updated>2020-04-14T06:35:39.669Z</updated>
  <id>https://gmaya.top/</id>
  
  <author>
    <name>GMaya</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记一次优化我的个人博客</title>
    <link href="https://gmaya.top/2020/20200414-2/"/>
    <id>https://gmaya.top/2020/20200414-2/</id>
    <published>2020-04-14T06:32:14.000Z</published>
    <updated>2020-04-14T06:35:39.669Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/13/SneezeSpring_ZH-CN1577114008_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>优化一下自己的博客访问速度等！不要求画面多么炫酷，但是，必须要快！快！！<br>我的博客：<a href="https://gmaya.top">https://gmaya.top</a>欢迎访问哟！</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>话不多说，先看效果<br>优化前：<br><img data-src="https://img-blog.csdnimg.cn/20200414142404240.png" alt="优化前"><br>优化后：<br><img data-src="https://img-blog.csdnimg.cn/2020041414265240.png" alt="优化后"></p><h2 id="Hexo内部优化"><a href="#Hexo内部优化" class="headerlink" title="Hexo内部优化"></a>Hexo内部优化</h2><p>我的个人博客站点使用hexo搭建，使用next模板。<br>模板配置文件搜索：motion<br>enable：是否开启页面动画，就是刚进来有没有那个慢吞吞的特效<br>async：是否开启异步加载，就是你的页面内容和特效是一起加载的。<br><img data-src="https://img-blog.csdnimg.cn/20200414141036404.png" alt=""></p><h2 id="Nginx优化访问"><a href="#Nginx优化访问" class="headerlink" title="Nginx优化访问"></a>Nginx优化访问</h2><p>我的博客静态页面是通过Nginx代理的</p><h3 id="修改worker-connections"><a href="#修改worker-connections" class="headerlink" title="修改worker_connections"></a>修改worker_connections</h3><p>默认是1024，相对而言扩大5倍，根据自己服务器决定</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">5024</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改http配置"><a href="#修改http配置" class="headerlink" title="修改http配置"></a>修改http配置</h3><p>需要哪个就加上哪个</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">    #                  '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">    #                  '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"># 关闭日志</span><br><span class="line">access_log      off;</span><br><span class="line"># 隐藏响应头中的有关操作系统和web server（Nginx）版本号的信息，这样对于安全性是有好处的。</span><br><span class="line">    server_tokens   off;</span><br><span class="line">    sendfile        on;</span><br><span class="line"># 等数据包累计到一定大小发送，启用 sendfile 生效</span><br><span class="line">    tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"># 开启gzip</span><br><span class="line">    gzip  on;</span><br><span class="line"># 启用gzip压缩的最小文件；小于设置值的文件将不会被压缩</span><br><span class="line">    gzip_min_length <span class="number">1</span>k;</span><br><span class="line"># gzip 压缩级别 1-10</span><br><span class="line">    gzip_comp_level <span class="number">2</span>;</span><br><span class="line"># 禁用IE 6 gzip</span><br><span class="line">gzip_disable <span class="string">"MSIE [1-6]\."</span>;</span><br><span class="line">gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php;</span><br><span class="line"># 是否在http header中添加Vary: Accept-Encoding，建议开启</span><br><span class="line">    gzip_vary on;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="开启https访问"><a href="#开启https访问" class="headerlink" title="开启https访问"></a>开启https访问</h3><p>不喜欢网站一直显示不安全。<br>如果是http请求，将转发到https</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">80</span>;</span><br><span class="line">    server_name  gmaya.top;</span><br><span class="line">    rewrite ^(.*)$ https:<span class="comment">//$host:443/$1 permanent;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态资源缓存"><a href="#静态资源缓存" class="headerlink" title="静态资源缓存"></a>静态资源缓存</h3><p>如果不是https，直接把内容加到80端口即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">  server &#123;</span><br><span class="line">      listen       <span class="number">443</span> ssl;</span><br><span class="line">      server_name  gmaya.top;</span><br><span class="line"># 添加自己的证书</span><br><span class="line">      ssl_certificate      xxx.crt;</span><br><span class="line">      ssl_certificate_key  xxx.key;</span><br><span class="line"></span><br><span class="line">      ssl_session_cache    shared:SSL:<span class="number">1</span>m;</span><br><span class="line">      ssl_session_timeout  <span class="number">5</span>m;</span><br><span class="line"></span><br><span class="line">      ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">      ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">location ~* \.(css|js|ico|gif|jpg|jpeg|png)$ &#123;</span><br><span class="line"># 同上，通配所有以.css/.js/...结尾的请求 </span><br><span class="line">access_log off; </span><br><span class="line">#忽略头部禁止缓存申明，类似与CDN的强制缓存功能</span><br><span class="line">proxy_ignore_headers <span class="string">"Cache-Control"</span> <span class="string">"Expires"</span> <span class="string">"Set-Cookie"</span>;</span><br><span class="line"># 开启缓存，时间864000秒，</span><br><span class="line">add_header Cache-Control <span class="string">"public,max-age=864000"</span>;</span><br><span class="line">root   C:\dev\blog;</span><br><span class="line">          index  index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">location ~* \.(html|xml)$ &#123;</span><br><span class="line">          access_log off;</span><br><span class="line">          # max-age&lt;=0 时向server发送http请求确认 ,该资源是否有修改, 有的话 返回200 , 无的话 返回304。</span><br><span class="line">          add_header Cache-Control no-cache;</span><br><span class="line">root   C:\dev\blog;</span><br><span class="line">          index  index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      location / &#123;</span><br><span class="line">access_log off;</span><br><span class="line">          root   C:\dev\blog;</span><br><span class="line">          index  index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>我博客上还有很多外链，哎，懒得换咯！（如果有一天外链挂了，再迁移过来。）</p><p>虽然一天到晚，总浏览量还不到20，哈哈。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/13/SneezeSpring_ZH-CN1577114008_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="优化" scheme="https://gmaya.top/categories/%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="Nginx" scheme="https://gmaya.top/tags/Nginx/"/>
    
      <category term="优化" scheme="https://gmaya.top/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Linux下Nginx的入门学习记录</title>
    <link href="https://gmaya.top/2020/20200414/"/>
    <id>https://gmaya.top/2020/20200414/</id>
    <published>2020-04-14T01:00:00.000Z</published>
    <updated>2020-04-14T01:03:23.379Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/14/BWFlipper_ZH-CN1813139386_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前两篇文章已经把环境等都安装完了。</p><h2 id="反向代理demo1"><a href="#反向代理demo1" class="headerlink" title="反向代理demo1"></a>反向代理demo1</h2><p>进入tomcat/webapps<br>新建java文件夹，里面放入一个html<br>访问效果<br><a href="http://192.168.21.129:8080/java/index.html" target="_blank" rel="noopener">http://192.168.21.129:8080/java/index.html</a><br><img data-src="https://img-blog.csdnimg.cn/20200413143633806.png" alt=""><br>一般情况下都是直接访问域名+路径，没有端口号的。这就该nginx上场了<br>修改nginx配置<br>进入conf文件夹</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi nginx.conf</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">80</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">           proxy_pass http:<span class="comment">//127.0.0.1:8080;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后重启nginx</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><p>访问<a href="http://192.168.21.129/java/index.html" target="_blank" rel="noopener">http://192.168.21.129/java/index.html</a><br>完美实现！</p><h2 id="反向代理demo2"><a href="#反向代理demo2" class="headerlink" title="反向代理demo2"></a>反向代理demo2</h2><p>复制一个tomcat，然后修改端口为8081</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r tomcat tomcat8081</span><br></pre></td></tr></table></figure><p>修改tomcat8081的端口，进入conf文件夹</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi server.xml</span><br></pre></td></tr></table></figure><p>直接输入/8080搜索<br>将8080 修改为8081<br><img data-src="https://img-blog.csdnimg.cn/20200413150727257.png" alt=""><br>关闭端口 8005  修改为  8006.<br><img data-src="https://img-blog.csdnimg.cn/20200413152934484.png" alt=""><br>修改一下此tomcat/webapps的文件<br>将之前的java/inde.html,修改为gmaya，内容也修改一下，用于区别。<br>访问不了，不要忘记开启8081端口哟<br>最终为：<br><a href="http://192.168.21.129:8080/java/index.html" target="_blank" rel="noopener">http://192.168.21.129:8080/java/index.html</a><br><a href="http://192.168.21.129:8081/gmaya/index.html" target="_blank" rel="noopener">http://192.168.21.129:8081/gmaya/index.html</a></p><p>修改nginx配置<br><img data-src="https://img-blog.csdnimg.cn/20200413153439872.png" alt=""><br>重启，访问看效果<br><img data-src="https://img-blog.csdnimg.cn/20200413154331962.png" alt=""></p><h2 id="Nginx-配置-负载均衡"><a href="#Nginx-配置-负载均衡" class="headerlink" title="Nginx 配置-负载均衡"></a>Nginx 配置-负载均衡</h2><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>还是上面的两个tomcat，直接修改nginx</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    upstream myserver &#123;</span><br><span class="line">        server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span>;</span><br><span class="line">        server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8081</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http:<span class="comment">//myserver;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认轮询的方式，每次打开新窗口，8080和8081会交替出现。<br>提示：修改webapps/ROOR下index文件会看的效果更明显<br><img data-src="https://img-blog.csdnimg.cn/20200413160258481.png" alt=""></p><h3 id="Nginx-分配策略："><a href="#Nginx-分配策略：" class="headerlink" title="Nginx 分配策略："></a>Nginx 分配策略：</h3><ol><li>轮询（默认） 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除</li><li>权重，默认1，权重越高被分配的客户端越多 指定轮询几率，weight 和访问比率成正比。比如一台服务器性能好，一台不好，那就分配性能好的多一点<br><img data-src="https://img-blog.csdnimg.cn/20200413160839814.png" alt=""></li><li>ip_hash 每个请求按访问 ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决 session 的问题。<br><img data-src="https://img-blog.csdnimg.cn/20200413161216835.png" alt=""></li><li>fair（第三方） 按后端服务器的响应时间来分配请求，响应时间短的优先分配。</li></ol><h2 id="Nginx-高可用"><a href="#Nginx-高可用" class="headerlink" title="Nginx 高可用"></a>Nginx 高可用</h2><p>tomcat搞了多个，也就是咱们web服务器搞了集群，不用担心某个tomcat挂了。<br>但是现在只有一台Nginx，如果Nginx挂了，也是gg<br>所以我们需要两台以上Nginx来实现故障转移和高可用。</p><h3 id="keepalived简介"><a href="#keepalived简介" class="headerlink" title="keepalived简介"></a>keepalived简介</h3><blockquote><p>Keepalived的作用是检测服务器的状态，如果有一台web服务器宕机，或工作出现故障，Keepalived将检测到，并将有故障的服务器从系统中剔除，同时使用其他服务器代替该服务器的工作，当服务器工作正常后Keepalived自动将服务器加入到服务器群中，这些工作全部自动完成，不需要人工干涉，需要人工做的只是修复故障的服务器。</p></blockquote><p>安装keepalived</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install keepalived -y</span><br></pre></td></tr></table></figure><p>查看网卡ifconfig<br>如果ifconfig使用不了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200413164500176.png?" alt=""><br>CentOS7里面的网卡名称默认不再是eth0，而是ens33</p><p>我没有那么多服务器，所以我是使用的虚拟机。做到这一步，然后克隆一个一模一样的。<br>一个主机为：192.168.21.129<br>一个从机为：192.168.21.130</p><h3 id="修改主从keepalived配置"><a href="#修改主从keepalived配置" class="headerlink" title="修改主从keepalived配置"></a>修改主从keepalived配置</h3><h4 id="主机"><a href="#主机" class="headerlink" title="主机"></a>主机</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#主机</span><br><span class="line">#检测脚本</span><br><span class="line">vrrp_script chk_http_port &#123;</span><br><span class="line">    script "/usr/local/src/check_nginx.sh" #心跳执行的脚本，检测nginx是否启动</span><br><span class="line">    interval 2                          #（检测脚本执行的间隔，单位是秒）</span><br><span class="line">    weight 2                            #权重</span><br><span class="line">&#125;</span><br><span class="line">#vrrp 实例定义部分</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER            # 指定keepalived的角色，MASTER为主，BACKUP为从</span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">ens33</span>         # 当前进行<span class="title">vrrp</span>通讯的网络接口卡(当前<span class="title">centos</span>的网卡) 用<span class="title">ifconfig</span>查看你具体的网卡</span></span><br><span class="line"><span class="class">    <span class="title">virtual_router_id</span> 52    # 虚拟路由编号，主从要一直</span></span><br><span class="line"><span class="class">    <span class="title">priority</span> 100            # 优先级，数值越大，获取处理请求的优先级越高</span></span><br><span class="line"><span class="class">    <span class="title">advert_int</span> 1            # 检查间隔，默认为1<span class="title">s</span>(<span class="title">vrrp</span>组播周期秒数)</span></span><br><span class="line"><span class="class">    #授权访问</span></span><br><span class="line"><span class="class">    <span class="title">authentication</span> </span>&#123;</span><br><span class="line">        auth_type PASS #设置验证类型和密码，MASTER和BACKUP必须使用相同的密码才能正常通信</span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_http_port            #（调用检测脚本）</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.21.133            # 定义虚拟ip(VIP)，可多设，每行一个</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="从机"><a href="#从机" class="headerlink" title="从机"></a>从机</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#从机</span><br><span class="line">#检测脚本</span><br><span class="line">vrrp_script chk_http_port &#123;</span><br><span class="line">    script "/usr/local/src/check_nginx.sh" #心跳执行的脚本，检测nginx是否启动</span><br><span class="line">    interval 2                          #（检测脚本执行的间隔，单位是秒）</span><br><span class="line">    weight 2                            #权重</span><br><span class="line">&#125;</span><br><span class="line">#vrrp 实例定义部分</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP            # 指定keepalived的角色，MASTER为主，BACKUP为从</span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">ens33</span>         # 当前进行<span class="title">vrrp</span>通讯的网络接口卡(当前<span class="title">centos</span>的网卡) 用<span class="title">ifconfig</span>查看你具体的网卡</span></span><br><span class="line"><span class="class">    <span class="title">virtual_router_id</span> 52    # 虚拟路由编号，主从要一直</span></span><br><span class="line"><span class="class">    <span class="title">priority</span> 99            # 优先级，数值越大，获取处理请求的优先级越高</span></span><br><span class="line"><span class="class">    <span class="title">advert_int</span> 1            # 检查间隔，默认为1<span class="title">s</span>(<span class="title">vrrp</span>组播周期秒数)</span></span><br><span class="line"><span class="class">    #授权访问</span></span><br><span class="line"><span class="class">    <span class="title">authentication</span> </span>&#123;</span><br><span class="line">        auth_type PASS #设置验证类型和密码，MASTER和BACKUP必须使用相同的密码才能正常通信</span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_http_port            #（调用检测脚本）</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.21.133           # 定义虚拟ip(VIP)，可多设，每行一个</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="检测nginx脚本"><a href="#检测nginx脚本" class="headerlink" title="检测nginx脚本"></a>检测nginx脚本</h4><p>在/usr/local/src/check_nginx.sh路径创建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#检测nginx是否启动了</span><br><span class="line">A=`ps -C nginx --no-header |wc -l`</span><br><span class="line">if [ $A -eq 0 ];then    #如果nginx没有启动就启动nginx</span><br><span class="line">      systemctl start nginx                #重启nginx</span><br><span class="line">      if [ `ps -C nginx --no-header |wc -l` -eq 0 ];then    #nginx重启失败，则停掉keepalived服务，进行VIP转移</span><br><span class="line">              killall keepalived</span><br><span class="line">      fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>修改文件访问权限</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">775</span> check_nginx.sh</span><br></pre></td></tr></table></figure><p>启动主从tomcat，nginx<br>启动主从keepalived</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start keepalived.service</span><br></pre></td></tr></table></figure><p>重启keepalived命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service keepalived restart</span><br></pre></td></tr></table></figure><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>如果启动<a href="http://192.168.21.133/" target="_blank" rel="noopener">http://192.168.21.133/</a> 发现访问不了，可能影响的原因有</p><ol><li>默认的global_defs配置中 ，将vrrp_strict注释！<br><img data-src="https://img-blog.csdnimg.cn/20200413181812875.png" alt=""></li><li>定义的virtual_ipaddress虚拟ip，要和自己本身的虚拟机ip段一样，比如：我的虚拟机ip为：<br><a href="http://192.168.21.130/" target="_blank" rel="noopener">http://192.168.21.130/</a> ，<a href="http://192.168.21.129/" target="_blank" rel="noopener">http://192.168.21.129/</a> ； 那么我的虚拟ip 也在<a href="http://192.168.21.*/" target="_blank" rel="noopener">http://192.168.21.*/</a> 范围内，我刚开始配置的192.168.200.100，就一直ping不通，改成192.168.21.133，解决。<br><img data-src="https://img-blog.csdnimg.cn/2020041318223412.png" alt=""></li><li>virtual_router_id 默认的是51， 可以修改成52，然后重启一下看看。</li><li>priority 主从的优先级不一样。</li></ol><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>现在已经能通过虚拟ip访问了， 现在直接把主机关闭。<br>再次访问，发现还是可以访问。说明咱们的高可用ok了。</p><p>如果发现检测nginx脚本，中的启动命令不能够直接启动Nginx，所以还要把自己服务器上的<br>systemctl start nginx 配置一下。</p><h2 id="Nginx优化"><a href="#Nginx优化" class="headerlink" title="Nginx优化"></a>Nginx优化</h2><blockquote><p>Nginx默认采用多进程工作方式，Nginx启动后，会运行一个master进程和多个worker进程。其中master充当整个进程组与用户的交互接口，同时对进程进行监护，管理worker进程来实现重启服务、平滑升级、更换日志文件、配置文件实时生效等功能。worker用来处理基本的网络事件，worker之间是平等的，他们共同竞争来处理来自客户端的请求</p></blockquote><h3 id="调整worker-processes"><a href="#调整worker-processes" class="headerlink" title="调整worker_processes"></a>调整worker_processes</h3><p><strong>worker 数和服务器的 cpu 数相等是最为适宜</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">默认：worker_processes: <span class="number">1</span></span><br><span class="line">调大：worker_processes: CPU核心数，(双核<span class="number">4</span>线程，可以设置为<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h3 id="最大化worker-connections"><a href="#最大化worker-connections" class="headerlink" title="最大化worker_connections"></a>最大化worker_connections</h3><p><strong>worker_processes与worker_connections 设置好合适大小，可以提示nginx处理性能，非常重要。</strong><br>数字越大，能同时处理的连接越多</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">默认：worker_connections: <span class="number">1024</span></span><br><span class="line">调大：worker_connections: <span class="number">100000</span>，（调大到<span class="number">10</span>万连接）</span><br></pre></td></tr></table></figure><p>connections不是随便设置的，而是与两个指标有重要关联，一是内存，二是操作系统级别的“进程最大可打开文件数”。<br>具体可以翻阅资料查看。不再絮叨了。</p><h3 id="启用Gzip压缩"><a href="#启用Gzip压缩" class="headerlink" title="启用Gzip压缩"></a>启用Gzip压缩</h3><p>压缩文件大小，减少了客户端http的传输带宽，因此提高了页面加载速度</p><h3 id="为静态文件启用缓存"><a href="#为静态文件启用缓存" class="headerlink" title="为静态文件启用缓存"></a>为静态文件启用缓存</h3><p>根据具体情况区别要不要开启</p><h3 id="禁用access-logs"><a href="#禁用access-logs" class="headerlink" title="禁用access_logs"></a>禁用access_logs</h3><p>访问日志记录，它记录每个nginx请求，因此消耗了大量CPU资源，从而降低了nginx性能</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/14/BWFlipper_ZH-CN1813139386_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://gmaya.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://gmaya.top/tags/Linux/"/>
    
      <category term="Nginx" scheme="https://gmaya.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装Nginx</title>
    <link href="https://gmaya.top/2020/20200413-3/"/>
    <id>https://gmaya.top/2020/20200413-3/</id>
    <published>2020-04-13T06:20:11.000Z</published>
    <updated>2020-04-13T06:28:53.390Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/13/RapaNuiFestival_ZH-CN1417623441_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上篇安装完jdk，tomcat 就在来一个Nginx。</p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>进入你想要安装的目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br></pre></td></tr></table></figure><p>创建nginx文件夹</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir nginx</span><br></pre></td></tr></table></figure><p>进入nginx目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx/</span><br></pre></td></tr></table></figure><p>下载nginx<br>在线下载或者自己下载好然后上传过来。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx<span class="literal">-1</span>.<span class="number">16.1</span>.tar.gz</span><br></pre></td></tr></table></figure><p>提示: 如果你没有wget,请先安装wget</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install wget</span><br></pre></td></tr></table></figure><p>安装所需的插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc c++</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><blockquote><p>用于编译c、c++代码的GCC；<br>用c语言编写的正则表达式函数库Pcre(使用rewrite模块)；<br>用于数据压缩的函式库的Zlib；<br>安全套接字层密码库OpenSSL（启用SSL支持）</p></blockquote><p>解压，编译<br>按照顺序执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-<span class="number">1.16</span><span class="number">.1</span>.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-<span class="number">1.16</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><h2 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h2><p><strong>启动</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd sbin/</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx</span><br></pre></td></tr></table></figure><p><strong>停用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s stop</span><br></pre></td></tr></table></figure><p><strong>重启</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><p>检查修改的nginx.conf配置是否正确</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -t</span><br></pre></td></tr></table></figure><p>启动完之后，浏览器访问<a href="http://192.168.21.129/" target="_blank" rel="noopener">http://192.168.21.129/</a><br>如果没有开启80端口，是不行的<br>开启80端口<br>我使用的是centos7<br>加入80规则<br>–permanent #永久生效，没有此参数设置，重启后会失效。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=<span class="keyword">public</span> --add-port=<span class="number">80</span>/tcp --permanent</span><br></pre></td></tr></table></figure><p>重启防火墙</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>刷新页面<a href="http://192.168.21.129/" target="_blank" rel="noopener">http://192.168.21.129/</a><br><img data-src="https://img-blog.csdnimg.cn/20200413141903835.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/13/RapaNuiFestival_ZH-CN1417623441_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://gmaya.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://gmaya.top/tags/Linux/"/>
    
      <category term="Nginx" scheme="https://gmaya.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装Tomcat</title>
    <link href="https://gmaya.top/2020/20200413-2/"/>
    <id>https://gmaya.top/2020/20200413-2/</id>
    <published>2020-04-13T05:45:11.000Z</published>
    <updated>2020-04-13T05:47:11.558Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/13/CorsicaHeart_ZH-CN2795615037_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上篇安装完jdk，就在来一个Tomcat。</p><h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><p>进入你想要安装的目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br></pre></td></tr></table></figure><p>创建tomcat文件夹</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir tomcat</span><br></pre></td></tr></table></figure><p>进入tomcat目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd tomcat/</span><br></pre></td></tr></table></figure><p>下载tomcat 8<br>在线下载或者自己下载好然后上传过来。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirror.bit.edu.cn/apache/tomcat/tomcat<span class="literal">-8</span>/v8.<span class="number">5.54</span>/bin/apache<span class="literal">-tomcat</span><span class="literal">-8</span>.<span class="number">5.54</span>.tar.gz</span><br></pre></td></tr></table></figure><p>提示: 如果你没有wget,请先安装wget</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install wget</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar <span class="literal">-zxvf</span> apache<span class="literal">-tomcat</span><span class="literal">-8</span>.<span class="number">5.54</span>.tar.gz</span><br></pre></td></tr></table></figure><p>开启默认8080端口<br>我使用的是centos7<br>加入8080 规则<br>–permanent #永久生效，没有此参数设置，重启后会失效。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> -<span class="literal">-zone</span>=public -<span class="literal">-add</span><span class="literal">-port</span>=<span class="number">8080</span>/tcp -<span class="literal">-permanent</span></span><br></pre></td></tr></table></figure><p>重启防火墙</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> -<span class="literal">-reload</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200413134305824.png" alt=""></p><p>启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/startup.sh</span><br></pre></td></tr></table></figure><p>浏览器访问： <a href="http://192.168.21.129:8080/" target="_blank" rel="noopener">http://192.168.21.129:8080/</a><br><img data-src="https://img-blog.csdnimg.cn/2020041313435613.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/13/CorsicaHeart_ZH-CN2795615037_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://gmaya.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://gmaya.top/tags/Linux/"/>
    
      <category term="Tomcat" scheme="https://gmaya.top/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装jdk1.8</title>
    <link href="https://gmaya.top/2020/20200413/"/>
    <id>https://gmaya.top/2020/20200413/</id>
    <published>2020-04-13T05:09:11.000Z</published>
    <updated>2020-04-13T05:44:59.674Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/13/EastereggsBerlin_ZH-CN7293755224_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直都想写一遍这个，虽然不是经常用到。这次准备搞一下Nginx,所以就从0开始，记录一下。</p><h2 id="安装jdk1-8"><a href="#安装jdk1-8" class="headerlink" title="安装jdk1.8"></a>安装jdk1.8</h2><p>进入你想要安装的目录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br></pre></td></tr></table></figure><p>创建jdk文件夹</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir jdk1<span class="number">.8</span></span><br></pre></td></tr></table></figure><p>进入jdk目录下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd jdk1<span class="number">.8</span>/</span><br></pre></td></tr></table></figure><p>下载jdk1.8</p><p>在线下载或者自己下载好然后上传过来。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate --no-cookies --header <span class="string">"Cookie: oraclelicense=accept-securebackup-cookie"</span> http:<span class="comment">//download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz</span></span><br></pre></td></tr></table></figure><p>耐心等待。。。<br><img data-src="https://img-blog.csdnimg.cn/20200413112955686.png" alt=""><br>解压</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-<span class="number">8</span>u131-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>先找到你的jdk安装目录记录一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/jdk1<span class="number">.8</span>/jdk1<span class="number">.8</span><span class="number">.0_131</span></span><br></pre></td></tr></table></figure><p>添加环境变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure><p>输入a，在文本最后面加上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/jdk1<span class="number">.8</span>/jdk1<span class="number">.8</span><span class="number">.0_131</span></span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>按 esc，然后：wq 保存退出。<br>加载环境变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>查看版本号，看是否安装成功！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200413130521190.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/13/EastereggsBerlin_ZH-CN7293755224_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://gmaya.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://gmaya.top/tags/Linux/"/>
    
      <category term="jdk" scheme="https://gmaya.top/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>分享一下Typora工具</title>
    <link href="https://gmaya.top/2020/20200411/"/>
    <id>https://gmaya.top/2020/20200411/</id>
    <published>2020-04-11T13:11:11.000Z</published>
    <updated>2020-04-11T13:14:30.833Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/11/SeventeenSolstice_ZH-CN4901756341_1920x1080.jpg" alt=""></p><a id="more"></a><p>分享 一个自己正在使用的工具</p><blockquote><p>Typora 是一款支持实时预览的 Markdown 文本编辑器。</p></blockquote><p>Typora官网<a href="https://www.typora.io/" target="_blank" rel="noopener">https://www.typora.io/</a><br>简直是编辑博客的不二之选！免费免费免费！！！<br>同时你也可以编写文档，编写简历，支持导出多种模式。太香了<br><img data-src="https://img-blog.csdnimg.cn/20200411210630663.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/11/SeventeenSolstice_ZH-CN4901756341_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://gmaya.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="https://gmaya.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot整合RabbitMQ入门</title>
    <link href="https://gmaya.top/2020/20200410/"/>
    <id>https://gmaya.top/2020/20200410/</id>
    <published>2020-04-10T09:22:31.000Z</published>
    <updated>2020-04-11T12:39:23.878Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/10/UnicornoftheSea_ZH-CN2949385175_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>RabbitMQ 即一个消息队列，主要是用来实现应用程序的异步和解耦，同时也能起到消息缓冲，消息分发的作用。</p></blockquote><p>安装完MQ，就该写个例子研究研究了。<br>新建Spring Boot 项目。</p><h2 id="修改pom文件"><a href="#修改pom文件" class="headerlink" title="修改pom文件"></a>修改pom文件</h2><p>新增RabbitMQ 支持</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>默认网页guest用户是不允许访问的，需要修改一下权限。上篇有写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: <span class="number">8088</span></span><br><span class="line">spring:</span><br><span class="line">  rabbitmq:</span><br><span class="line">    host: <span class="number">192.168</span><span class="number">.21</span><span class="number">.129</span></span><br><span class="line">    port: <span class="number">5672</span></span><br><span class="line">    username: guest</span><br><span class="line">    password: guest</span><br><span class="line">    virtual-host: /</span><br></pre></td></tr></table></figure><h2 id="四种交换机"><a href="#四种交换机" class="headerlink" title="四种交换机"></a>四种交换机</h2><p>交换机的功能主要是接收消息并且转发到绑定的队列，交换机不存储消息。</p><p>交换机有四种类型：Direct, topic, Headers and Fanout</p><blockquote><p>Direct是RabbitMQ默认的交换机模式,也是最简单的模式.即创建消息队列的时候,指定一个BindingKey.当发送者发送消息的时候,指定对应的Key.当Key和消息队列的BindingKey一致的时候,消息将会被发送到该消息队列中.</p></blockquote><blockquote><p>topic转发信息主要是依据通配符,队列和交换机的绑定主要是依据一种模式(通配符+字符串),而当发送消息的时候,只有指定的Key和该模式相匹配的时候,消息才会被发送到该消息队列中.</p></blockquote><blockquote><p>headers也是根据一个规则进行匹配,在消息队列和交换机绑定的时候会指定一组键值对规则,而发送消息的时候也会指定一组键值对规则,当两组键值对规则相匹配的时候,消息会被发送到匹配的消息队列中.</p></blockquote><blockquote><p>Fanout是路由广播的形式,将会把消息发给绑定它的全部队列,即便设置了key,也会被忽略.</p></blockquote><h2 id="Direct"><a href="#Direct" class="headerlink" title="Direct"></a>Direct</h2><h3 id="创建配置类"><a href="#创建配置类" class="headerlink" title="创建配置类"></a>创建配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息队列配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 16:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE = <span class="string">"hello-top-gmaya"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Direct Exchange（交换机最简单的方式）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">queue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// durable = true 开启持久化</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建生产者"><a href="#创建生产者" class="headerlink" title="创建生产者"></a>创建生产者</h3><p>用来提供消息产生的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息队列生产者,比如订单下完,需要生产一个邮件推送的消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 向key = MQConfig.QUEUE 中发送消息</span></span><br><span class="line">        <span class="keyword">this</span>.amqpTemplate.convertAndSend(MQConfig.QUEUE, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建消费者"><a href="#创建消费者" class="headerlink" title="创建消费者"></a>创建消费者</h3><p>用来消费消息的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息列队 , 消费者, 用来消费队列中的消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receiver</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 接收key = MQConfig.QUEUE 中消息</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiver</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>写个hello，然后调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Sender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHello</span><span class="params">(@RequestParam String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"hello自己的业务。。。"</span>);</span><br><span class="line">        sender.sender(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello rabbitmq!!!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:8088/hello?msg=你好啊" target="_blank" rel="noopener">http://localhost:8088/hello?msg=你好啊</a></p><p><img data-src="https://img-blog.csdnimg.cn/20200410104352630.png" alt=""></p><h2 id="topic"><a href="#topic" class="headerlink" title="topic"></a>topic</h2><h3 id="修改配置类"><a href="#修改配置类" class="headerlink" title="修改配置类"></a>修改配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息队列配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 16:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE = <span class="string">"hello-top-gmaya"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE_A = <span class="string">"topic-a"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE_B = <span class="string">"topic-b"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROUTING_KEYA = <span class="string">"topic.gmaya"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROUTING_KEYB = <span class="string">"topic.#"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC_EXCHANGE = <span class="string">"TOPIC_EXCHANGE"</span>; <span class="comment">// topic 交换机名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Direct Exchange（交换机最简单的方式）----begin</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">queue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// durable = true 开启持久化</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Direct Exchange（交换机最简单的方式）----end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Topic Exchange 可以用通配符 ---begin</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">topicQueueA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE_A, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">topicQueueB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE_B, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义topic交换机</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TopicExchange <span class="title">topicExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TopicExchange(TOPIC_EXCHANGE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// routing_key为topic.gmaya,就是完全匹配</span></span><br><span class="line">    <span class="comment">// 其实就相当于，你发送的时候 routing_key 和我的一样， 我就进入我的队列中，不然就不进</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">topicBindingA</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(topicQueueA()).to(topicExchange()).with(ROUTING_KEYA);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// routing_key为topic.#,就是模糊匹配</span></span><br><span class="line">    <span class="comment">// 其实就相当于，你发送的时候 routing_key 满足我的routing_key， 就进入我的队列中，不然就不进</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">topicBindingB</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(topicQueueB()).to(topicExchange()).with(ROUTING_KEYB);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Topic Exchange 可以用通配符 ---begin</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改生产者"><a href="#修改生产者" class="headerlink" title="修改生产者"></a>修改生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息队列生产者,比如订单下完,需要生产一个邮件推送的消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 向key = MQConfig.QUEUE 中发送消息</span></span><br><span class="line">        <span class="keyword">this</span>.amqpTemplate.convertAndSend(MQConfig.QUEUE, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">topicSender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"topic生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 交换机中发送消息</span></span><br><span class="line">        <span class="comment">// 这次是完全匹配， 结果应该a和b都能接收到</span></span><br><span class="line">        <span class="comment">// 因为b是模糊， 此条件满足模糊的条件，所有b会接收</span></span><br><span class="line">        <span class="keyword">this</span>.amqpTemplate.convertAndSend(MQConfig.TOPIC_EXCHANGE,MQConfig.ROUTING_KEYA, msg + <span class="string">"完全匹配"</span>);</span><br><span class="line">        <span class="comment">// 这次是模糊匹配，不满足a的条件，所以只有b模糊可以接收</span></span><br><span class="line"><span class="comment">//        this.amqpTemplate.convertAndSend(MQConfig.TOPIC_EXCHANGE,"topic.xixihaha", msg + "模糊匹配");</span></span><br><span class="line">        <span class="comment">// 这次是routing_key 不满足a，也不满足b。所以两个都接收不到。</span></span><br><span class="line"><span class="comment">//        this.amqpTemplate.convertAndSend(MQConfig.TOPIC_EXCHANGE,"gmaya.top", msg + "不存在");</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改消费者"><a href="#修改消费者" class="headerlink" title="修改消费者"></a>修改消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息列队 , 消费者, 用来消费队列中的消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receiver</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 接收key = MQConfig.QUEUE 中消息</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiver</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE_A)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiverA</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"QUEUE_A消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE_B)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiverB</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"QUEUE_B消费者消费。。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>完全匹配<br><img data-src="https://img-blog.csdnimg.cn/20200410113651384.png" alt=""><br>模糊匹配<br><img data-src="https://img-blog.csdnimg.cn/20200410113741617.png" alt=""></p><h2 id="Fanout"><a href="#Fanout" class="headerlink" title="Fanout"></a>Fanout</h2><h3 id="修改配置类-1"><a href="#修改配置类-1" class="headerlink" title="修改配置类"></a>修改配置类</h3><p>在topic配置类基础上新增代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Fanout Exchange 消息广播的模式 ---begin</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义Fanout交换机名称</span></span><br><span class="line"><span class="comment">// 不管路由键或者是路由模式，会把消息发给绑定给它的全部队列，如果配置了routing_key会被忽略。</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FanoutExchange <span class="title">fanoutExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> FanoutExchange(FANOUT_EXCHANGE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">fanoutBindingA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(topicQueueA()).to(fanoutExchange());</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">fanoutBindingB</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(topicQueueB()).to(fanoutExchange());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fanout Exchange 消息广播的模式 ---end</span></span><br></pre></td></tr></table></figure><p>消费者不需要更改（因为是使用的topic中的两个，已经写过了）</p><h3 id="修改生产者-1"><a href="#修改生产者-1" class="headerlink" title="修改生产者"></a>修改生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * fanout 模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fanoutSender</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">    log.info(<span class="string">"fanout生产者生产消息。。。。。&#123;&#125;"</span>, msg);</span><br><span class="line">    <span class="comment">// 会把消息发送给 所有绑定到此交换机的全部列队；routing_key会被忽略。</span></span><br><span class="line">    <span class="keyword">this</span>.amqpTemplate.convertAndSend(MQConfig.FANOUT_EXCHANGE, <span class="string">""</span>, msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Sender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHello</span><span class="params">(@RequestParam String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"hello自己的业务。。。"</span>);</span><br><span class="line"><span class="comment">//        sender.sender(msg);</span></span><br><span class="line"><span class="comment">//        sender.topicSender(msg);</span></span><br><span class="line">        sender.fanoutSender(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello rabbitmq!!!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200410141531194.png" alt=""></p><h2 id="延迟队列（死信队列）"><a href="#延迟队列（死信队列）" class="headerlink" title="延迟队列（死信队列）"></a>延迟队列（死信队列）</h2><p>模拟订单创建完，如果30分钟后还没有支付，则取消订单。<br>要实现的办法很多， 使用RabbitMQ延迟队列是其中一个办法！</p><p>使用死信队列大致思路：<br><img data-src="https://img-blog.csdnimg.cn/202004101700583.png" alt=""></p><h3 id="订单MQ配置类"><a href="#订单MQ配置类" class="headerlink" title="订单MQ配置类"></a>订单MQ配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单业务配置</span></span><br><span class="line"><span class="comment"> * 死信对列使用的 orderTTLExchange，orderTTLQueue，orderTTLKey</span></span><br><span class="line"><span class="comment"> * 正常对列使用的 orderExchange，orderQueue，orderKey</span></span><br><span class="line"><span class="comment"> * 在orderTTLQueue中设置，当消息设置的时间到了，消失了，那么我就去调用orderQueue，orderKey，通知它。</span></span><br><span class="line"><span class="comment"> * 其实没有对应的rderTTLQueue消费类，肯定到期就没了，然后就实现了一定时间后把消息传给某个队列。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/10 15:37</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建延迟队列(死信对列)交换机orderTTLExchange</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DirectExchange <span class="title">orderTTLExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DirectExchange(<span class="string">"orderTTLExchange"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建实际消费交换机orderExchange</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DirectExchange <span class="title">orderExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DirectExchange(<span class="string">"orderExchange"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建延迟队列(死信对列)orderTTLQueue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">orderTTLQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"x-dead-letter-exchange"</span>, <span class="string">"orderExchange"</span>); <span class="comment">// 到期后转发的交换机</span></span><br><span class="line">        map.put(<span class="string">"x-dead-letter-routing-key"</span>, <span class="string">"orderKey"</span>); <span class="comment">// 到期后转发的路由key</span></span><br><span class="line">        <span class="keyword">return</span> QueueBuilder.durable(<span class="string">"orderTTLQueue"</span>).withArguments(map).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建实际orderQueue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">orderQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(<span class="string">"orderQueue"</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将（延迟队列orderTTLQueue）和（交换机orderTTLExchange）绑定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">orderTTLBinding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(orderTTLQueue()).to(orderTTLExchange()).with(<span class="string">"orderTTLKey"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将（延迟队列orderQueue）和（交换机orderExchange）绑定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">orderBinding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(orderQueue()).to(orderExchange()).with(<span class="string">"orderKey"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="订单生产者"><a href="#订单生产者" class="headerlink" title="订单生产者"></a>订单生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单消息生产着</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/10 15:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderSender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"生产者===订单号：&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// 这里把消息生产出来，传到TTL的队列中去，那么到期还没有被消费，就认为死信息，就会调用设置好的队列了</span></span><br><span class="line">        amqpTemplate.convertAndSend(<span class="string">"orderTTLExchange"</span>, <span class="string">"orderTTLKey"</span>, msg, <span class="keyword">new</span> MessagePostProcessor() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Message <span class="title">postProcessMessage</span><span class="params">(Message message)</span> <span class="keyword">throws</span> AmqpException </span>&#123;</span><br><span class="line">                <span class="comment">// 设置失效时间，毫秒，一般订单设置30分钟,30*60*1000</span></span><br><span class="line">                <span class="comment">// 过期直接转发到指定的路由</span></span><br><span class="line">                <span class="comment">// 由于模拟设置20秒</span></span><br><span class="line">                MessageProperties messageProperties = message.getMessageProperties();</span><br><span class="line">                messageProperties.setContentEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">                messageProperties.setExpiration(<span class="string">"20000"</span>);</span><br><span class="line">                <span class="keyword">return</span> message;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="订单消费者"><a href="#订单消费者" class="headerlink" title="订单消费者"></a>订单消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单消息消费者</span></span><br><span class="line"><span class="comment"> * 主要用于检查订单状态是否支付</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/10 15:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderReceiver</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 这里只是消费了orderQueue。没有人去消费orderTTLQueue.一旦写了TTL那么就是实时消费了，不叫死信了。</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = <span class="string">"orderQueue"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">orderMsg</span><span class="params">(String msg)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        log.info(<span class="string">"消费者===订单号：&#123;&#125;"</span>, msg);</span><br><span class="line">        <span class="comment">// TODO 处理判断此订单状态是否支付，如果没有支付则取消订单！</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用测试"><a href="#调用测试" class="headerlink" title="调用测试"></a>调用测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> GMaya</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dateTime</span> 2020/4/9 15:37</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderSender orderSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"order"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOrder</span><span class="params">(@RequestParam String msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"Order创建成功。。。"</span>);</span><br><span class="line">        orderSender.sendMsg(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"order创建成功！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模拟20秒后进行实际调用处理<br>将20秒换成30分钟，实现超过30分钟还未支付的订单处理<br><img data-src="https://img-blog.csdnimg.cn/20200410170553124.png" alt=""><br><img data-src="https://img-blog.csdnimg.cn/20200410170805913.png" alt=""><br>上述代码全部上传到gitee。<br>项目地址：<a href="https://gitee.com/GMaya/springboot-rabbitmq" target="_blank" rel="noopener">https://gitee.com/GMaya/springboot-rabbitmq</a><br>欢迎star</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/10/UnicornoftheSea_ZH-CN2949385175_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://gmaya.top/categories/Java/"/>
    
    
      <category term="RabbitMQ" scheme="https://gmaya.top/tags/RabbitMQ/"/>
    
      <category term="Spring Boot" scheme="https://gmaya.top/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Linux下安装RabbitMQ入门级别</title>
    <link href="https://gmaya.top/2020/20200409/"/>
    <id>https://gmaya.top/2020/20200409/</id>
    <published>2020-04-09T12:18:12.000Z</published>
    <updated>2020-04-11T12:31:45.312Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/09/SantoriniAerial_ZH-CN9367767863_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="Linux安装RabbitMQ"><a href="#Linux安装RabbitMQ" class="headerlink" title="Linux安装RabbitMQ"></a>Linux安装RabbitMQ</h2><h3 id="安装erlang环境"><a href="#安装erlang环境" class="headerlink" title="安装erlang环境"></a>安装erlang环境</h3><blockquote><p>由于RabbitMQ是基于Erlang（面向高并发的语言）语言开发，所以在安装RabbitMQ之前，需要先安装Erlang。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install epel<span class="literal">-release</span></span><br><span class="line">yum <span class="literal">-y</span> update</span><br><span class="line">yum <span class="literal">-y</span> install erlang socat</span><br></pre></td></tr></table></figure><p>查看erlang版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">erl <span class="literal">-version</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/2020040915052285.png" alt=""></p><h3 id="安装RabbitMQ"><a href="#安装RabbitMQ" class="headerlink" title="安装RabbitMQ"></a>安装RabbitMQ</h3><p><strong>下载RabbitMQ</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.rabbitmq.com/releases/rabbitmq<span class="literal">-server</span>/v3.<span class="number">6.15</span>/rabbitmq<span class="literal">-server</span><span class="literal">-3</span>.<span class="number">6.15</span><span class="literal">-1</span>.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p><strong>提示:</strong> 如果你没有wget,请先安装wget </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install wget</span><br></pre></td></tr></table></figure><p><strong>安装RabbitMQ</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install rabbitmq<span class="literal">-server</span><span class="literal">-3</span>.<span class="number">6.15</span><span class="literal">-1</span>.el7.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>添加开机启动RabbitMQ服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable rabbitmq<span class="literal">-server</span>.service</span><br></pre></td></tr></table></figure><p>启动web控制台</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq<span class="literal">-plugins</span> enable rabbitmq_management</span><br></pre></td></tr></table></figure><p>防火墙开放15672和5672端口</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables <span class="literal">-I</span> INPUT <span class="literal">-p</span> tcp -<span class="literal">-dport</span> <span class="number">15672</span> <span class="literal">-j</span> ACCEPT</span><br><span class="line">/sbin/iptables <span class="literal">-I</span> INPUT <span class="literal">-p</span> tcp -<span class="literal">-dport</span> <span class="number">5672</span> <span class="literal">-j</span> ACCEPT</span><br></pre></td></tr></table></figure><p>默认网页guest用户是不允许访问的，需要修改一下权限</p><p>修改配置文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/rabbitmq/lib/rabbitmq_server<span class="literal">-3</span>.<span class="number">6.5</span>/ebin/rabbit.app</span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200409195424631.png" alt=""><br>启动, 停止 , 重启</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service rabbitmq<span class="literal">-server</span> start</span><br><span class="line">service rabbitmq<span class="literal">-server</span> stop</span><br><span class="line">service rabbitmq<span class="literal">-server</span> restart</span><br></pre></td></tr></table></figure><p>注：有可能起不来 。。。</p><p>进入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib/rabbitmq/bin</span><br></pre></td></tr></table></figure><p>启动 加 -detached 后台启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rabbitmq<span class="literal">-server</span> start <span class="literal">-detached</span></span><br></pre></td></tr></table></figure><p>浏览器输入ip:15672<br>输入guest     guest<br><img data-src="https://img-blog.csdnimg.cn/20200409153400333.png" alt=""></p><p>服气，各种版本不一致问题，提不起来，项目访问不到，端口不通，这个安装感觉比oracle都麻烦！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/09/SantoriniAerial_ZH-CN9367767863_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://gmaya.top/categories/Java/"/>
    
    
      <category term="RabbitMQ" scheme="https://gmaya.top/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>Java中的多重for循环怎么跳出最外层</title>
    <link href="https://gmaya.top/2020/20200408/"/>
    <id>https://gmaya.top/2020/20200408/</id>
    <published>2020-04-08T06:01:12.000Z</published>
    <updated>2020-04-11T12:31:42.200Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/08/PinkMoon_ZH-CN9026483067_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="笔记记录"><a href="#笔记记录" class="headerlink" title="笔记记录"></a>笔记记录</h2><p>不加任何代码,最里层的break,只能跳出最内层的循环, 如果想要跳出最外面的,就要新增一个标记.<br>在想要跳出循环的地方加标记,然后break标记.</p><p>同理换成continue 标记; 效果一样.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试多重for循环 break</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">forTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line">    tab: <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">"我是i...."</span> + i);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a; j++) &#123;</span><br><span class="line">            System.out.println(<span class="string">"我是j...."</span> + j);</span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span> tab;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/08/PinkMoon_ZH-CN9026483067_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://gmaya.top/categories/Java/"/>
    
    
      <category term="Java" scheme="https://gmaya.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Python一键获取所有高清无码王者皮肤图片</title>
    <link href="https://gmaya.top/2020/20200406/"/>
    <id>https://gmaya.top/2020/20200406/</id>
    <published>2020-04-06T08:20:33.000Z</published>
    <updated>2020-04-11T12:31:39.637Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://s1.wailian.download/2020/04/06/CastleDay_ZH-CN8752542375_1920x1080.jpg" alt=""></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>突然看到王者荣耀每个英雄的图片很不错,所有就一张一张保存了.</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>1.打开王者荣耀官方英雄列表<br>2.分析接口<br>3.实际操作<br>4.调整代码<br>5.开始启动程序</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>其中中间发现,获取的页面中并没有直接找到图片的地址, 所以先拿到皮肤名称拼接成图片链接,然后真正拿到高清无码皮肤图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: gbk -*-#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Name:         WZRYImpageDemo</span></span><br><span class="line"><span class="comment"># Description:  多线程获取王者荣耀所有英雄高清皮肤</span></span><br><span class="line"><span class="comment"># Author:       GMaya</span></span><br><span class="line"><span class="comment"># Date:         2020/4/6 14:56</span></span><br><span class="line"><span class="comment"># -------------------------------------------------------</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, json, re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建会话对象</span></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'origin'</span>: <span class="string">'https://pvp.qq.com'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有英雄列表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hero_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 请求接口</span></span><br><span class="line">    result = session.get(<span class="string">'https://pvp.qq.com/web201605/js/herolist.json'</span>, headers=headers)</span><br><span class="line">    <span class="comment"># 解析json结果</span></span><br><span class="line">    resJson = json.loads(result.text)</span><br><span class="line">    <span class="keyword">for</span> res <span class="keyword">in</span> resJson:</span><br><span class="line">        <span class="comment"># 英雄名称</span></span><br><span class="line">        cname = res.get(<span class="string">'cname'</span>)</span><br><span class="line">        <span class="comment"># 英雄详情页id</span></span><br><span class="line">        ename = res.get(<span class="string">'ename'</span>)</span><br><span class="line">        <span class="comment"># 多线程获取详细页</span></span><br><span class="line">        myThread(cname, ename).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取英雄详情页面信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hero_tail</span><span class="params">(ename, cname)</span>:</span></span><br><span class="line">    <span class="comment"># 请求接口</span></span><br><span class="line">    result = session.get(<span class="string">'https://pvp.qq.com/web201605/herodetail/%s.shtml'</span> % ename, headers=headers)</span><br><span class="line">    result.encoding = <span class="string">'gbk'</span></span><br><span class="line">    zz = <span class="string">"""&lt;ul class="pic-pf-list pic-pf-list3" data-imgname="(.*?)"&gt;"""</span></span><br><span class="line">    <span class="comment"># 由于爬取的页面和网页上看到的实际效果不一致,所以这里拿取所有皮肤名称,直接去皮肤服务器拿取</span></span><br><span class="line">    res_tail = re.findall(zz, result.text)[<span class="number">0</span>]</span><br><span class="line">    res_tail_list = res_tail.split(<span class="string">'|'</span>)</span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> tail <span class="keyword">in</span> res_tail_list:</span><br><span class="line">        imgName = cname + <span class="string">'-'</span> + tail</span><br><span class="line">        <span class="comment"># 下载具体图片</span></span><br><span class="line">        get_hero_skin(ename, count, imgName)</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存下载图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hero_skin</span><span class="params">(ename, i, imgName)</span>:</span></span><br><span class="line">    url = <span class="string">"http://game.gtimg.cn/images/yxzj/img201606/skin/hero-info/%s/%s-bigskin-%d.jpg"</span> % (ename, ename, i)</span><br><span class="line">    <span class="comment"># 拼接最后的图片地址,然后保存</span></span><br><span class="line">    res_skin = session.get(url)</span><br><span class="line">    file = <span class="string">'D:\download\爬虫图片目录\王者荣耀图片\%s.jpg'</span> % imgName</span><br><span class="line">    <span class="comment"># wb : 以二进制格式打开一个文件只用于写入。一般用于非文本文件如图片等。</span></span><br><span class="line">    <span class="keyword">with</span> open(file, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(res_skin.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建线程类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, cname, ename)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.cname = cname</span><br><span class="line">        self.ename = ename</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"开始线程："</span> + self.cname)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            get_hero_tail(self.ename, self.cname)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            print(<span class="string">'线程出现意外....'</span> + self.name)</span><br><span class="line">        print(<span class="string">"退出线程："</span> + self.cname)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 开始</span></span><br><span class="line">    get_hero_list()</span><br></pre></td></tr></table></figure><p>也没有具体的计算, 这三百多个将近四百个, 其中包含英雄本身的图片,所以真正的皮肤应该是200多个.应该是全了.说实话,300kb左右的图片, 已经很清楚了</p><p><img data-src="https://img-blog.csdnimg.cn/20200406161040494.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;https://s1.wailian.download/2020/04/06/CastleDay_ZH-CN8752542375_1920x1080.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://gmaya.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gmaya.top/tags/Python/"/>
    
  </entry>
  
</feed>
